#!/usr/bin/env node
(e=>{const t={};!function s(r){return r in t||(t[r]={},e[r](t[r],s)),t[r]}(".")})({common:(e,t)=>{const s=require("fs"),r=require("chalk"),n=require("dayjs");e.compileTimeConfig=JSON.parse(s.readFileSync("maka.config","utf-8")),e.logInfo=function(e,t){console.log(r`[{blueBright ${n().format("HH:mm:ss.SSS")}} ${e}] ${t}`)},e.logError=function(e,t){console.log(r`[{blueBright ${n().format("HH:mm:ss.SSS")}} {red ${e}}] ${t}`)},e.logCritical=function(e,t){return console.log(r`[{blueBright ${n().format("HH:mm:ss.SSS")}} {red ${e}}] ${t}`),process.exit(1)},process.on("unhandledRejection",(e=>{console.log("unhandled reject: ",e),process.exit(0)}))},"tools/admin":(e,t)=>{const s=require("net"),r=require("async-mutex"),n=t("common");const o=new r.Mutex;e.admin=async function(e){await o.runExclusive((async()=>await async function(e){const t=s.createConnection("/tmp/fps.socket").ref();return new Promise(((s,r)=>{const o=JSON.stringify(e);t.on("error",(e=>{"code"in e&&"ENOENT"==e.code?(n.logError("adm",`admin socket not open, command ${o} discarded`),s()):(n.logError("adm",`socket error: ${e.message}`),r())})),t.on("timeout",(()=>{n.logError("adm","socket timeout"),t.destroy(),r()})),t.once("data",(e=>{"ACK"==e.toString("utf-8")&&(n.logInfo("adm",`command ${o} acknowledged`),setTimeout((()=>{t.destroy(),s()}),0))})),t.write(o)}))}(e)))}},"tools/typescript":(e,t)=>{const s=require("path"),r=require("typescript"),n=require("chalk"),o=t("common"),i={lib:["lib.esnext.d.ts"],target:r.ScriptTarget.ESNext,module:r.ModuleKind.CommonJS,moduleResolution:r.ModuleResolutionKind.NodeJs,skipLibCheck:!0,noEmitOnError:!0,noImplicitAny:!0,noFallthroughCaseInSwitch:!0,noImplicitReturns:!0,noImplicitThis:!0,noUnusedLocals:!0,noUnusedParameters:!0,strictFunctionTypes:!0,strictBindCallApply:!0,removeComments:!0};function a(e){return"normal"==e.base?{...i,outDir:"/vbuild",sourceMap:"no"!=e.sourceMap,lib:"additionalLib"in e?[...i.lib,...e.additionalLib.map((e=>`lib.${e}.d.ts`))]:i.lib}:{...i,outDir:s.resolve("src"),sourceMap:!0,esModuleInterop:!0,module:r.ModuleKind.ESNext,jsx:r.JsxEmit.ReactJSX,lib:[...i.lib,"lib.dom.d.ts"]}}function l({category:e,code:t,messageText:s,file:i,start:a}){if(6031!=t)if(6032==t)o.logInfo("tsc","retranspile");else{if(6194==t)return;{const o=(0,{[r.DiagnosticCategory.Warning]:n.red,[r.DiagnosticCategory.Error]:n.red,[r.DiagnosticCategory.Suggestion]:n.green,[r.DiagnosticCategory.Message]:n.cyan}[e])(`  TS${t} `);let l="";if(i){const{line:e,character:t}=r.getLineAndCharacterOfPosition(i,a);l=n`{yellow ${i.fileName}:${e+1}:${t+1}} `}let c=r.flattenDiagnosticMessageText(s,"\n");c.includes("\n")&&(c="\n"+c),console.log(o+l+c)}}}function c(e){const t=r.sys.readFile;r.sys.readFile=(s,r)=>{let n;if(n=e.readFile?e.readFile(s,(e=>t(e,r))):t(s,r),!s.endsWith(".d.ts"))for(const e in o.compileTimeConfig)n=n.replaceAll(e,o.compileTimeConfig[e]);return n}}function m(e,t){return(s,r)=>{if(s.endsWith(".js")){r.startsWith('"use strict"')&&(r=r.slice(r.indexOf("\n")+1)),r.startsWith("Object.defineProperty")&&(r=r.slice(r.indexOf("\n")+1)),r.startsWith("exports.")&&(r=r.slice(r.indexOf("\n")+1));const t=/\/\/#\s*sourceMappingURL/.exec(r);t&&"hide"==e.sourceMap?r=r.slice(0,t.index):r.endsWith("\n")||(r+="\n")}const n=t.findIndex((e=>e.name==s));n>=0?t.splice(n,1,{name:s,content:r}):t.push({name:s,content:r})}}function p(e,t){o.logInfo("tsc",n`once {yellow ${e.entry}}`),c(t);const s=a(e),i=[],p=function(e){const t=e.diagnostics.filter((e=>e.category==r.DiagnosticCategory.Error||r.DiagnosticCategory.Warning)).length,s=e.diagnostics.length-t;let i;i=0==s&&0==t?"no diagnostic":0!=s&&0==t?n`{yellow ${s}} infos`:0==s?n`{yellow ${t}} errors`:n`{yellow ${t}} errors and {yellow ${s}} infos`,(e.emitSkipped?o.logError:o.logInfo)("tsc",`completed with ${i}`);for(const t of e.diagnostics)l(t);return!e.emitSkipped}(r.createProgram([e.entry],s,r.createCompilerHost(s)).emit(void 0,m(e,i)));t.afterEmit({success:p,files:i})}function d(e,t){o.logInfo("tsc",n`watch {yellow ${e.entry}}`),c(t);const s=[];r.createWatchProgram(r.createWatchCompilerHost([e.entry],a(e),r.sys,((...n)=>{const o=r.createEmitAndSemanticDiagnosticsBuilderProgram(...n),i=o.emit;return o.emit=(r,n,...o)=>{const a=i(r,m(e,s),...o);return a.emitSkipped||t.afterEmit({files:s}),a},o}),l,l))}e.transpile=function(e,t){("normal"==e.base&&e.watch?d:p)(e,t)}},"tools/mypack":(e,t)=>{const s=require("path"),r=require("chalk"),n=require("crypto-js"),o=require("filesize"),i=require("source-map"),a=require("terser"),l=t("common");e.pack=async function(e){if(e.lastResult?l.logInfo("mpk","repack"):l.logInfo("mpk",r`pack {yellow ${e.entry}}`),!e.files.some((t=>t.name==e.entry)))return l.logError("mpk","invalid entry"),{success:!1};const t=s.dirname(e.entry),c=e.sourceMap?e.files.filter((e=>e.name.endsWith(".js"))).map((({name:t,content:s})=>({name:t,jsContent:s,mapContent:e.files.find((e=>e.name==t+".map")).content}))):e.files.map((({name:e,content:t})=>({name:e,jsContent:t,mapContent:null})));let m=null;e.sourceMap&&(m=new i.SourceMapGenerator({file:e.output}));let p=3;const d=[];let u="app"==e.type?"((modules) => { const mycache = {};\n(function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n":"module.exports = ((modules) => { const mycache = {};\nreturn (function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n";for(let{name:r,jsContent:o,mapContent:a}of c){let f=s.relative(t,r);f.endsWith(".js")&&(f=f.slice(0,-3)),f.endsWith("index")&&(f=f.slice(0,-5)),0==f.length&&(f=".");let y=o;for(;;){const e=/require\("(?<moduleName>\.[\.\w\-\/]*)"\);/,n=e.exec(y);if(!n)break;const o=s.join(s.dirname(r),n.groups.moduleName);let i=c.some((e=>e.name==o))?o:c.some((e=>e.name==o+".js"))?o+".js":c.some((e=>e.name==o+"/index.js"))?o+"/index.js":null;if(null===i)return l.logError("mpk",`${r}: invalid module name ${n.groups.moduleName} at ${n.index}`),{success:!1};i=s.relative(t,i),i=i.slice(0,-3),i.endsWith("index")&&(i=i.slice(0,-5)),0==i.length&&(i="."),y=y.replace(e,`__myrequire__("${i}");`)}if(u+=`'${f}': (exports, __myrequire__) => {\n${y}}, `,d.push({fileName:r,moduleName:f,contentLength:y.length,hash:n.SHA256(y).toString()}),e.sourceMap){let e=null;(await new i.SourceMapConsumer(JSON.parse(a))).eachMapping((t=>{null===e&&(e=t.generatedLine),m.addMapping({source:s.resolve(t.source),original:{line:t.originalLine,column:t.originalColumn},generated:{line:t.generatedLine-e+p+1,column:t.generatedColumn}})}))}p+=y.split("\n").length}u+="})\n";let f=m?.toString();if(e.minify){const t=await a.minify(u,{sourceMap:!!e.sourceMap&&{content:f,filename:e.output,url:e.output+".map"},format:{max_line_len:"MAKA_SELF_MULTILINE"in process.env?120:void 0}});u=t.code,f="object"==typeof t.map?JSON.stringify(t.map):t.map}const y=n.SHA256(u).toString();if(y===e.lastResult?.hash)l.logInfo("mpk","completed with no change");else if(e.lastResult||e.output&&l.logInfo("mpk",r`asset {yellow ${e.output}}`),l.logInfo("mpk",r`asset size {gray ${o(u.length)}} compression rate {gray ${(u.length/c.reduce(((e,t)=>e+t.jsContent.length),0)*100).toFixed(2)}%}`),e.printModules)if(e.lastResult){for(const t of d.filter((t=>!e.lastResult.modules.some((e=>e.fileName==t.fileName)))))console.log(r`  {gray +} ${t.fileName} {cyan ${t.moduleName}} {gray size ${o(t.contentLength)}}`);for(const[t]of d.map((t=>[t,e.lastResult.modules.find((e=>e.fileName==t.fileName))])).filter((([e,t])=>t&&e.hash!=t.hash)))console.log(r`  {gray *} ${t.fileName} {cyan ${t.moduleName}} {gray size ${o(t.contentLength)}}`);for(const t of e.lastResult.modules.filter((e=>!d.some((t=>t.fileName==e.fileName)))))console.log(r`  {gray - removed ${t.fileName}} {cyan ${t.moduleName}}`)}else for(const{fileName:e,moduleName:t,contentLength:s}of d)console.log(r`   {gray +} ${e} {cyan ${t}} {gray size ${o(s)}}`);return{success:!0,jsContent:u,mapContent:f,hash:y,modules:d}}},"targets/self":(e,t)=>{const s=require("fs"),r=require("chalk"),n=t("common"),o=t("tools/typescript"),i=t("tools/mypack"),a={base:"normal",entry:"script/index.ts",sourceMap:"no",watch:!1},l={type:"app",entry:"/vbuild/index.js",files:[],output:"maka",minify:!0};e.build=function(){n.logInfo("mka",r`{yellow self}`),o.transpile(a,{afterEmit:async({success:e,files:t})=>{if(!e)return n.logCritical("mka",r`{yellow self} failed at transpile`);const o=await i.pack({...l,files:t});if(!o.success)return n.logCritical("mka",r`{yellow self} failed at pack`);s.writeFileSync("maka","#!/usr/bin/env node\n"+o.jsContent),n.logInfo("mka","self completed successfully")}})}},"targets/public":(e,t)=>{const s=require("fs-extra"),r=require("rimraf"),n=t("common");e.build=function(){n.logInfo("mka","copy public"),s.copySync("src/public","dist/public",{overwrite:!0}),n.logInfo("mka","copy public completed")},e.cleanAll=function(){n.logInfo("mka","clean all"),r("dist",(e=>{e?n.logError("mka","clean failed: "+e.message):n.logInfo("mka","clean all completed")}))}},"targets/server-core":(e,t)=>{const s=require("child_process"),r=require("fs"),n=require("chalk"),o=t("common"),i=t("tools/admin"),a=t("tools/typescript"),l=t("tools/mypack"),c=e=>({base:"normal",entry:"src/server-core/index.ts",sourceMap:"hide",watch:e}),m={type:"app",entry:"/vbuild/server-core/index.js",files:[],sourceMap:!0,output:"dist/main/server.js",printModules:!0,minify:!0};function p(){o.logInfo("mka",n`{yellow server-core}`),a.transpile(c(!1),{afterEmit:async({success:e,files:t})=>{if(!e)return o.logCritical("mka",n`{yellow server-core} failed at transpile typescript`);const s=await l.pack({...m,files:t});if(!s.success)return o.logCritical("mka",n`{yellow server-core} failed at pack`);await r.promises.mkdir("dist/main",{recursive:!0}),await Promise.all([r.promises.writeFile("dist/main/server.js",s.jsContent),r.promises.writeFile("dist/main/server.js.map",s.mapContent)]),o.logInfo("mka","server-core completed successfully")}})}let d=null;function u(){function e(){o.logInfo("mds","start server"),d=s.spawn("node",["dist/main/server.js"]),d.stdout.pipe(process.stdout),d.stderr.pipe(process.stderr),d.on("error",(e=>{o.logError("mds",`server process error ${e.message}`)})),d.on("exit",(e=>{(0==e?o.logInfo:o.logError)("mds",`server process exited with code ${e}`),d=null}))}null!=d?(d.once("exit",e),i.admin({type:"shutdown"})):e()}function f(){o.logInfo("mka",n`watch {yellow server-core}`),process.on("exit",(()=>d?.kill()));let e=null;a.transpile(c(!0),{afterEmit:async({files:t})=>{const s=await l.pack({...m,files:t,lastResult:e});s.success&&(await r.promises.mkdir("dist/main",{recursive:!0}),await Promise.all([r.promises.writeFile("dist/main/server.js",s.jsContent),r.promises.writeFile("dist/main/server.js.map",s.mapContent)]),s.hash!=e?.hash&&u(),e=s)}})}e.startOrRestartServer=u,e.build=function(e){(e?f:p)()}},"tools/sass":(e,t)=>{const s=require("chalk"),r=require("node-sass"),n=t("common");e.transpile=async function(e){return n.logInfo("css",s`once {yellow ${e.file}}`),new Promise((t=>{r.render(e,((s,r)=>{s?(n.logError("css",`error at ${e.file}:${s.line}:${s.column}: ${s.message}`),t({success:!1})):(n.logInfo("css",`completed in ${r.stats.duration}ms`),t({success:!0,style:r.css.toString("utf-8")}))}))}))}},"targets/web-page":(e,t)=>{const s=require("fs"),r=require("chalk"),n=t("common"),o=t("tools/admin"),i=t("tools/typescript"),a=t("tools/sass"),l=(e,t)=>({base:"normal",entry:`src/pages/${e}.ts`,additionalLib:["dom"],sourceMap:"hide",watch:t}),c=e=>({file:`src/pages/${e}.sass`,outputStyle:"compressed"});async function m(e){n.logInfo("mka",r`{yellow ${e}-page}`),await s.promises.mkdir("dist/main",{recursive:!0});const t=l(e,!1);if(s.existsSync(t.entry)){const o=(await new Promise((s=>i.transpile(t,{afterEmit:({success:t,files:o})=>{if(!t)return n.logCritical("mka",r`{yellow ${e}-page} failed at transpile typescript`);s(o)}}))))[0].content;await s.promises.writeFile(`dist/main/${e}.js`,o)}const m=c(e);if(s.existsSync(m.file)){const{success:t,style:o}=await a.transpile(m);if(!t)return n.logCritical("mka",r`{yellow ${e}-page} failed at transpile stylesheet`);await s.promises.writeFile(`dist/main/${e}.css`,o)}n.logInfo("htm",r`copy {yellow ${e}.html}`),await s.promises.copyFile(`src/pages/${e}.html`,`dist/main/${e}.html`),n.logInfo("htm","copy completed"),await o.admin({type:"reload-static",key:e}),n.logInfo("mka",`build ${e}-page completed succesfully`)}async function p(e){n.logInfo("mka",r`watch {yellow ${e}-page}`),await s.promises.mkdir("dist/main",{recursive:!0});const t=l(e,!0);s.existsSync(t.entry)&&i.transpile(t,{afterEmit:async({files:t})=>{const r=t[0].content;await s.promises.writeFile(`dist/main/${e}.js`,r),o.admin({type:"reload-static",key:e}).catch((()=>{}))}});const m=c(e);s.existsSync(m.file)&&s.watchFile(m.file,{persistent:!1},(async(t,r)=>{if(t.mtime==r.mtime)return;const{success:n,style:i}=await a.transpile(c(e));n&&(s.writeFileSync(`dist/main/${e}.css`,i),o.admin({type:"reload-static",key:e}).catch((()=>{})))})),s.watchFile(`src/pages/${e}.html`,{persistent:!1},((t,i)=>{t.mtime!=i.mtime&&(n.logInfo("htm",r`copy {yellow ${e}.html}`),s.copyFileSync(`src/pages/${e}.html`,`dist/main/${e}.html`),n.logInfo("htm","copy completed"),o.admin({type:"reload-static",key:e}).catch((()=>{})))})),process.on("SIGINT",(()=>{s.unwatchFile(`src/pages/${e}.html`),s.existsSync(m.file)&&s.unwatchFile(m.file),process.exit(0)})),n.logInfo("mka","tsc watch and fs watch setup")}e.build=function(e,t){return(t?p:m)(e)}},"tools/codegen":(e,t)=>{const s=require("fs"),r=require("chalk"),n=require("xml2json"),o=t("common"),i=["GET","POST","PUT","PATCH","DELETE"],a={GET:"get",POST:"post",PUT:"put",PATCH:"patch",DELETE:"del"},l=["id","number","string","boolean","date","time"],c={id:{pattern:"\\d+",validator:"validateId",tsType:"number"},number:{pattern:"\\d+",validator:"validateNumber",tsType:"number"},string:{pattern:".+",validator:"validateString",tsType:"string"},boolean:{pattern:"(true|false)",validator:"validateBoolean",tsType:"boolean"},date:{pattern:"\\d{6}",validator:"validateDate",tsType:"Dayjs"},time:{pattern:"\\d{12}",validator:"validateTime",tsType:"Dayjs"}};async function m(e){const t=await s.promises.readFile(`src/${e}/api.xml`,"utf-8"),{version:r,api:o}=n.toJson(t,{object:!0})[`${e}-api`];return{version:r,definitions:o.map(((e,t)=>{const s=e.name;if(!s)throw new Error(`index ${t} api name is required`);const r=e.method;if(!i.includes(r))throw new Error(`api ${s} invalid method`);const n=e.path;if(!n)throw new Error(`api ${s} path is required`);if(!n.startsWith("/"))throw new Error(`api ${s} path should be absolute`);const o=function(e,t){const s=[];for(;;){const r=/\{(?<parameterName>[\w\_]+):(?<parameterType>\w+)\}/.exec(t);if(!r)break;if(10==s.filter((e=>"parameter"==e.type)).length)throw new Error(`api ${e} too many parameters`);const[n,o]=[r.groups.parameterName,r.groups.parameterType];if(!l.includes(o))throw new Error(`api ${e} parameter ${n} invalid type ${o}`);0!=r.index&&s.push({type:"normal",value:t.slice(0,r.index)}),s.push({type:"parameter",parameterName:n,parameterType:o}),t=t.slice(r.index+n.length+o.length+3)}return t.length&&s.push({type:"normal",value:t}),s}(s,n),[a,c]=[e["body-type"],e["body-name"]];if(["POST","PUT","PATCH"].includes(r)&&(!a||!c))throw new Error(`api ${s} body is required for ${r}`);return{namespace:e.namespace||"default",apiName:s,method:r,apiPath:o,bodyType:a,bodyName:c,returnType:e["return-type"]||"void"}}))}}e.generate=async function(e,t){return"server"==t?await async function(e){const t=`src/${e}/server/index.ts`;let n;o.logInfo("fcg",r`generate {yellow ${t}}`);try{n=await m(e)}catch(e){return o.logError("fcg",e.message),!1}const{version:i,definitions:a}=n;let p="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==a.length)return p+="// empty\n",await s.promises.writeFile(t,p),o.logInfo("fcg","generate completed with empty"),!0;p+=`import { WebContext, ${l.filter((e=>a.some((t=>t.apiPath.some((t=>"parameter"==t.type&&t.parameterType==e)))))).map((e=>c[e].validator)).concat(a.some((e=>["PUT","POST","PATCH"].includes(e.method)))?["validateBody"]:[]).join(", ")} } from '../../shared/api-server';\n`,p+="import { MyError } from '../../shared/error';\n";for(const e of a.map((e=>e.namespace)).filter(((e,t,s)=>s.indexOf(e)==t)))p+=`import { ${a.filter((t=>t.namespace==e)).map((e=>e.apiName)).join(", ")} } from './${e}';\n`;p+="\n",p+="export async function dispatch(ctx: WebContext) {\n",p+="    let match: RegExpExecArray;\n",p+=`    if (!ctx.path.startsWith('/${e}/v${i}')) { throw new MyError('not-found', 'invalid invocation version'); }\n`,p+=`    const methodPath = \`\${ctx.method} \${ctx.path.slice(${e.length+i.length+3})}\`;\n`,p+="\n";for(const e of a){const{apiName:t,method:s,apiPath:r,bodyType:n,returnType:o}=e;p+=`    match = /^${s} `;for(const e of r)"normal"==e.type?p+=e.value.replaceAll("/","\\/"):p+=`(?<${e.parameterName}>${c[e.parameterType].pattern})`;p+="$/.exec(methodPath); if (match) {\n",p+="        ",o&&"void"!=o&&(p+="ctx.body = "),p+=`await ${t}(ctx.state`;for(const{parameterName:e,parameterType:t}of r.filter((e=>"parameter"==e.type)))p+=`, ${c[t].validator}('${e}', match.groups['${e}'])`;n&&(p+=", validateBody(ctx.request.body)"),p+=");\n","POST"==s?p+="        ctx.status = 201;\n":"DELETE"==s&&(p+="        ctx.status = 204;\n"),p+="        return;\n",p+="    }\n"}return p+="\n",p+="    throw new MyError('not-found', 'invalid invocation');\n",p+="}\n",await s.promises.writeFile(t,p),o.logInfo("fcg","generate completed"),!0}(e):await async function(e){const t=`src/${e}/client/api.ts`;let n;o.logInfo("fcg",r`generate {yellow ${t}}`);try{n=await m(e)}catch(e){return o.logError("fcg",e.message),!1}const{version:l,definitions:p}=n;let d="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==p.length)return d+="// empty\n",await s.promises.writeFile(t,d),o.logInfo("fcg","generate completed with empty"),!0;p.some((e=>e.apiPath.some((e=>"parameter"==e.type&&["date","time"].includes(e.parameterType)))))&&(d+="import type { Dayjs } from 'dayjs';\n"),d+=`import { ${i.filter((e=>p.some((t=>t.method==e)))).map((e=>a[e])).join(", ")} } from '../../shared/api-client';\n`,d+=`import type { ${p.filter((e=>!!e.bodyType)).map((e=>e.bodyType)).filter(((e,t,s)=>s.indexOf(e)==t)).join(",")} } from '../api';\n`,d+="\n";for(const t of p){const{apiName:s,method:r,apiPath:n,bodyType:o,bodyName:i,returnType:m}=t;d+=`export const ${s} = (`;for(const{parameterName:e,parameterType:t}of n.filter((e=>"parameter"==e.type)))d.endsWith("(")||(d+=", "),d+=`${e}: ${c[t].tsType}`;o&&(d.endsWith("(")||(d+=", "),d+=`${i}: ${o}`),d+=`): Promise<${m}> => ${a[r]}(\`/${e}/v${l}`;for(const e of n)"normal"==e.type?d+=e.value:"date"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDD')}`:"time"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDDHHmmdd')}`:d+=`\${${e.parameterName}}`;d+="`",o&&(d+=`, ${i}`),d+=");\n"}return await s.promises.writeFile(t,d),o.logInfo("fcg","generate completed"),!0}(e)}},"targets/app-server":(e,t)=>{const s=require("fs"),r=require("chalk"),n=t("common"),o=t("tools/admin"),i=t("tools/codegen"),a=t("tools/typescript"),l=t("tools/mypack"),c=(e,t)=>({base:"normal",entry:`src/${e}/server/index.ts`,sourceMap:"hide",watch:t}),m=(e,t,s)=>({type:"lib",entry:`/vbuild/${e}/server/index.js`,files:t,sourceMap:!0,output:`dist/${e}/server.js`,printModules:!0,minify:!0,lastResult:s});e.build=async function(e,t){t?function(e){n.logInfo("mka",r`watch {yellow ${e}-server}`),s.mkdirSync(`dist/${e}`,{recursive:!0}),s.watchFile(`src/${e}/api.xml`,{persistent:!1},((t,s)=>{t.mtime!=s.mtime&&i.generate(e,"server")})),process.on("SIGINT",(()=>{s.unwatchFile(`src/${e}/api.xml`),process.exit(0)}));let t=null;a.transpile(c(e,!0),{afterEmit:async({files:r})=>{const n=await l.pack(m(e,r,t));n.success&&(await Promise.all([s.promises.writeFile(`dist/${e}/server.js`,n.jsContent),s.promises.writeFile(`dist/${e}/server.js.map`,n.mapContent)]),n.hash!=t?.hash&&await o.admin({type:"reload-server",app:e}),t=n)}}),i.generate(e,"server")}(e):await async function(e){if(n.logInfo("mka",r`{yellow ${e}-server}`),await s.promises.mkdir(`dist/${e}`,{recursive:!0}),!await i.generate(e,"server"))return n.logCritical("mka",r`{yellow ${e}-server} failed at code generation`);a.transpile(c(e,!1),{afterEmit:async({success:t,files:i})=>{if(!t)return n.logCritical("mka",r`{yellow ${e}-server} failed at transpile typescript`);const a=await l.pack(m(e,i));if(!a.success)return n.logCritical("mka",r`{yellow ${e}-server} failed at pack`);await Promise.all([s.promises.writeFile(`dist/${e}/server.js`,a.jsContent),s.promises.writeFile(`dist/${e}/server.js.map`,a.mapContent)]),await o.admin({type:"reload-server",app:e}),n.logInfo("mka",`${e}-server complete successfully`)}})}(e)}},"targets/app-client":(e,t)=>{const s=require("fs"),r=require("path"),n=require("zlib"),o=require("antd-dayjs-webpack-plugin"),i=require("chalk"),a=require("dayjs"),l=require("filesize"),c=require("memfs"),m=require("terser-webpack-plugin"),p=require("unionfs"),d=require("webpack"),u=t("common"),f=t("tools/admin"),y=t("tools/codegen"),g=t("tools/sass"),h=t("tools/typescript"),w="MAKA_AC_OSIZE"in process.env?"0"===process.env.MAKA_AC_OSIZE?0:parseInt(process.env.MAKA_AC_OSIZE)||2:2;async function $(e){u.logInfo("mka",i`{yellow ${e}-client}`),s.mkdirSync(`dist/${e}`,{recursive:!0});const t=s.existsSync(`src/${e}/api.xml`)?y.generate(e,"client").then((t=>{if(!t)return u.logCritical("mka",i`{yellow ${e}-client} failed at code generation`)})):Promise.resolve(),$=g.transpile((e=>({file:`src/${e}/client/index.sass`,outputStyle:"compressed"}))(e)).then((({success:t,style:r})=>t?(s.writeFileSync(`dist/${e}/index.css`,r),["index.css"]):u.logCritical("mka",i`{yellow ${e}-client} failed at transpile style`))),v=t.then((()=>new Promise((t=>{h.transpile(((e,t)=>({base:"jsx",entry:`src/${e}/client/index.tsx`,sourceMap:"normal",watch:t}))(e,!1),{afterEmit:({success:f,files:y})=>{if(!f)return u.logCritical("mka",i`{yellow ${e}-client} failed at transpile script`);const g=((e,t)=>({mode:"production",watch:t,entry:r.resolve("src",e,"client/index.js"),module:{rules:[{test:/\.js$/,enforce:"pre",use:["source-map-loader"]}]},output:{filename:"client.js",path:r.resolve(`dist/${e}`)},devtool:"source-map",performance:{hints:!1},cache:{type:"filesystem",store:"pack",cacheDirectory:r.resolve(".cache"),name:`${e}-client-webpack-cache`},optimization:{emitOnErrors:!1,splitChunks:{cacheGroups:{1:{test:/node_modules\/react\-dom/,priority:20,chunks:"all",filename:"client-vendor1.js"},2:{test:/node_modules\/(rc|\@ant-design)/,priority:20,chunks:"all",filename:"client-vendor2.js"},3:{test:/node_modules\/(antd|lodash)/,priority:20,chunks:"all",filename:"client-vendor3.js"},4:{test:/node_modules/,priority:10,chunks:"all",filename:"client-vendor4.js"}}},minimize:0!=w,minimizer:[new m({terserOptions:{format:{comments:!1},compress:2==w},extractComments:!1})]},plugins:[new o]}))(e,!1);u.logInfo("wpk",i`once {yellow ${g.entry}}`);const h=function(e){const t=new c.Volume;t.fromJSON(e.reduce(((e,t)=>(e[t.name]=t.content,e)),{}));const r=new p.Union;return r.use(s).use(t),r}(y),$=d(g);$.inputFileSystem=h,$.run(((r,o)=>{if(r)return u.logError("wpk",r.message),u.logCritical("mka",i`{yellow ${e}-client} failed at pack (1)`);u.logInfo("wpk","finalizing");const c=o.toJson();if(function(e,t){for(const r of t.assets){const t=`dist/${e}/${r.name}`,o=s.readFileSync(t);if(r.compressSize={gzip:n.gzipSync(o).length,deflate:n.deflateSync(o).length,br:n.brotliCompressSync(o).length},r.name.includes("vendor")){const n=o.toString("utf-8"),i=/\/\/#\s*sourceMappingURL/.exec(n),a=n.slice(0,i.index);s.writeFileSync(t,a),r.size=a.length;const l=`dist/${e}/${r.name}.map`;s.existsSync(l)&&s.unlinkSync(l)}}}(e,c),function(e){const t=`logs/stats-${a().format("YYYYMMDD-HHmmss")}.txt`,r=l(e.assets.reduce(((e,t)=>e+t.size),0)),n=l(e.assets.reduce(((e,t)=>e+t.compressSize.br),0)),[o,c]=[e.assets.filter((e=>e.name.includes("vendor"))).reduce(((e,t)=>Math.max(e,t.size)),0),e.assets.filter((e=>e.name.includes("vendor"))).reduce(((e,t)=>Math.min(e,t.size)),1e7)];if(0==e.errorsCount){if(u.logInfo("wpk",i`completed with {yellow ${e.assets.length}} assets in ${e.time/1e3}s`),u.logInfo("wpk",i`total ${r} compress {yellow ${n}} range [${l(c)}, ${l(o)}]`),e.warningsCount>0){u.logInfo("wpk",i`{yellow ${e.warningsCount}} warnings`);for(const{message:t}of e.warnings)console.log("  "+t)}}else{u.logError("wpk",i`completed with {red ${e.errorsCount}} errors, stat file {yellow ${t}}`);for(const{message:t}of e.errors)u.logError("wpk",t)}let m="";const p=["entry","rendered","initial","recorded"],d=["built","codeGenerated","cached","cacheable","optional","prefetched"];if(m+=`hash ${e.hash} time ${e.time}ms total size ${r} (${n})\n`,e.warningsCount){m+=`${e.warningsCount} warnings:\n`;for(const t of e.warnings)m+=JSON.stringify(t,void 0,1)+"\n"}if(e.errorsCount){m+=`${e.errorsCount} errors:\n`;for(const t of e.errors)m+=JSON.stringify(t,void 0,1)+"\n"}for(const t of e.assets){const e=`gzip: ${l(t.compressSize.gzip)} deflate: ${l(t.compressSize.deflate)} br: ${l(t.compressSize.br)}`;m+=`asset ${t.name} size ${l(t.size)} (${e}) chunks [${t.chunks.join(",")}] chunkNames [${t.chunkNames.join(",")}]\n`}for(const t of e.chunks){m+=`chunk ${t.id} files [${t.files.join(",")}] size ${l(t.size)} flags [${p.filter((e=>t[e])).join(",")}] ${t.modules.length} chunks\n`;for(const e of t.modules)if(m+=`  module ${e.id} size ${l(e.size)} flags [${d.filter((t=>e[t])).join(",")}] name "${e.name}" identifier "${e.identifier}"\n`,/\+ \d+ modules/.test(e.name)&&e.modules)for(const t of e.modules)m+=`    submodule ${t.name} size ${l(t.size)}\n`}s.writeFileSync(t,m)}(c),c.errorsCount>0)return u.logCritical("mka",i`{yellow ${e}-client} failed at pack (2)`);t(c.assets.map((e=>e.name)))}))}})}))));Promise.all([$,v]).then((([t,r])=>{const n=`src/${e}/index.html`;u.logInfo("htm",i`read {yellow ${n}}`);let o=s.readFileSync(n,"utf-8").replace("<stylesheet-placeholder />",t.map((e=>`<link rel="stylesheet" type="text/css" href="/${e}">`)).join("\n  ")).replace("<script-placeholder />",r.map((e=>`<script type="text/javascript" src="/${e}"><\/script>`)).join("\n  "));s.writeFileSync(`dist/${e}/index.html`,o),u.logInfo("htm","template rendered"),f.admin({type:"reload-static",key:e}).then((()=>{u.logInfo("mka",`${e}-client complete successfully`)}))}))}e.build=function(e,t){$(e)}},".":(e,t)=>{const s=t("tools/admin"),r=t("targets/self"),n=t("targets/public"),o=t("targets/server-core"),i=t("targets/web-page"),a=t("targets/app-server"),l=t("targets/app-client");function c(e){if(["home","user","404","418"].includes(e))return e;console.log("unknown page name"),process.exit(1)}function m(e){if(["cost","collect","ak"].includes(e))return e;console.log("unknown app name"),process.exit(1)}const[p,d]=[process.argv[2],process.argv[3]];"self"==p?r.build():"clean"==p?n.cleanAll():"public"==p?n.build():"server-core"==p?o.build(!1):"watch"==p&&"server-core"==d?o.build(!0):p.endsWith("-page")?i.build(c(p.slice(0,-5)),!1):"watch"==p&&d.endsWith("-page")?i.build(c(d.slice(0,-5)),!0):p.endsWith("-client")?l.build(m(p.slice(0,-7)),!1):"watch"==p&&d.endsWith("-client")?l.build(m(d.slice(0,-7)),!0):p.endsWith("-server")?a.build(m(p.slice(0,-7)),!1):"watch"==p&&d.endsWith("-server")?a.build(m(d.slice(0,-7)),!0):"watch"==p&&d.endsWith("-both")?(l.build(m(d.slice(0,-5)),!0),a.build(m(d.slice(0,-5)),!0)):"all"==p?(n.build(),o.build(!1),i.build("www",!1),i.build("user",!1),i.build("404",!1),i.build("418",!1),a.build("cost",!1),l.build("ak",!1)):"shutdown"==p?s.admin({type:"shutdown"}).then((()=>process.exit(1))):"reload-static"==p?s.admin({type:"reload-static",key:"home"==d||"user"==d?d:m(d)}).then((()=>process.exit(1))):"source-map"==p?s.admin({type:"source-map",enabled:"enable"==d}).then((()=>process.exit(1))):"reload-server"==p?s.admin({type:"reload-server",app:m(d)}).then((()=>process.exit(1))):"expire-device"==p?s.admin({type:"expire-device",deviceId:parseInt(d)}).then((()=>process.exit(1))):(console.log("unknown command"),process.exit(1))}});