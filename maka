#!/usr/bin/env node
(e=>{const t={};!function o(n){return n in t||(t[n]={},e[n](t[n],o)),t[n]}(".")})({common:(e,t)=>{const o=require("fs"),n=require("chalk"),r=require("dayjs");e.projectDirectory="<PROJECTDIR>",e.nodePackage=JSON.parse(o.readFileSync("package.json","utf-8")),e.compileTimeConfig=JSON.parse(o.readFileSync("maka.config","utf-8"));e.commonReadFileHook=(t,o)=>{let n=o(t);if(!t.endsWith(".d.ts"))for(const t in e.compileTimeConfig)n=n.split(t).join(e.compileTimeConfig[t]);return n};e.commonWatchReadFileHook=(t,o,n)=>{let r=n(t,o);if(!t.endsWith(".d.ts"))for(const t in e.compileTimeConfig)r=r.split(t).join(e.compileTimeConfig[t]);return r},e.logInfo=function(e,t){console.log(n`[${r().format("HH:mm:ss")}][{cyan ${e}}] ${t}`)},e.logError=function(e,t){console.log(n`[${r().format("HH:mm:ss")}][{red ${e}}] ${t}`)},process.on("unhandledRejection",(e=>{console.log("unhandled reject: ",e),process.exit(0)}))},admin:(e,t)=>{const o=require("net"),n=require("async-mutex"),r=t("common");const i=new n.Mutex;e.admin=async function(e){await i.runExclusive((async()=>await async function(e){const t=o.createConnection("/tmp/fps.socket").ref();return new Promise(((o,n)=>{const i=JSON.stringify(e);t.on("error",(e=>{"code"in e&&"ENOENT"==e.code?(r.logError("adm",`admin socket not open, command ${i} discarded`),o()):(r.logError("adm",`socket error: ${e.message}`),n())})),t.on("timeout",(()=>{r.logError("adm","socket timeout"),t.destroy(),n()})),t.once("data",(e=>{"ACK"==e.toString("utf-8")&&(r.logInfo("adm",`command ${i} acknowledged`),setTimeout((()=>{t.destroy(),o()}),0))})),t.write(i)}))}(e)))}},"run-typescript":(e,t)=>{const o=require("typescript"),n=require("chalk"),r=t("common");e.ModuleKind=o.ModuleKind,e.ModuleResolutionKind=o.ModuleResolutionKind,e.JsxEmit=o.JsxEmit,e.ScriptTarget=o.ScriptTarget;const i={lib:["lib.es2020.d.ts"],target:o.ScriptTarget.ES2020,module:o.ModuleKind.CommonJS,moduleResolution:o.ModuleResolutionKind.NodeJs,noEmitOnError:!0,noImplicitAny:!0,noFallthroughCaseInSwitch:!0,noImplicitReturns:!0,noImplicitThis:!0,noUnusedLocals:!0,noUnusedParameters:!0,strictFunctionTypes:!0,strictBindCallApply:!0,removeComments:!0},a={[o.DiagnosticCategory.Warning]:n.red,[o.DiagnosticCategory.Error]:n.red,[o.DiagnosticCategory.Suggestion]:n.green,[o.DiagnosticCategory.Message]:n.cyan};function s({category:e,code:t,messageText:i,file:s,start:l}){if(6031!=t)if(6032==t)r.logInfo("tsc","retranspile");else{if(6194==t)return;{const r=a[e](`  TS${t} `);let c="";if(s){const{line:e,character:t}=o.getLineAndCharacterOfPosition(s,l);c=n`{yellow ${s.fileName}:${e+1}:${t+1}} `}let m=o.flattenDiagnosticMessageText(i,"\n");m.includes("\n")&&(m="\n"+m),console.log(r+c+m)}}}e.transpileOnce=function(e,t){r.logInfo("tsc",n`once {yellow ${e}}`);const a={...i,...t,lib:"lib"in t?[...i.lib,...t.lib]:i.lib},l=function(e){const t=o.createCompilerHost(e);if(e.readFileHook){const o=t.readFile;t.readFile=t=>e.readFileHook(t,o)}const n=t.writeFile;return t.writeFile=(t,o,r,i,a)=>{t.endsWith(".js")&&(o.startsWith('"use strict"')&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("Object.define")&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("exports.")&&(o=o.slice(o.indexOf("\n")+1)),e.sourceMap?o=o.slice(0,o.lastIndexOf("\n")+1):o.endsWith("\n")||(o+="\n")),e.writeFileHook?e.writeFileHook(t,o,r,i,a,n):n(t,o,r,i,a)},t}(a),c=o.createProgram(Array.isArray(e)?e:[e],a,l),{diagnostics:m}=c.emit(),{success:p,message:d}=function(e){const t=e.filter((e=>e.category==o.DiagnosticCategory.Error||o.DiagnosticCategory.Warning)).length,r=e.length-t;let i;return i=0==r&&0==t?"no diagnostic":0!=r&&0==t?n`{yellow ${r}} infos`:0==r?n`{yellow ${t}} errors`:n`{yellow ${t}} errors and {yellow ${r}} infos`,{success:0==t,message:i}}(m);return p?r.logInfo("tsc",`completed with ${d}`):r.logError("tsc",`completed with ${d}`),m.map(s),p},e.transpileWatch=function(e,t){if(r.logInfo("tsc",n`watch {yellow ${e}}`),t.watchReadFileHook){const e=o.sys.readFile;o.sys.readFile=(o,n)=>t.watchReadFileHook(o,n,e)}const a=o.sys.writeFile;o.sys.writeFile=(e,o,n)=>{e.endsWith(".js")&&(o.startsWith('"use strict"')&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("Object.define")&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("exports.")&&(o=o.slice(o.indexOf("\n")+1)),t.sourceMap?o=o.slice(0,o.lastIndexOf("\n")+1):o.endsWith("\n")||(o+="\n")),t.watchWriteFileHook?t.watchWriteFileHook(e,o,n,a):a(e,o,n)},o.createWatchProgram(o.createWatchCompilerHost([e],{...i,...t},o.sys,((...e)=>{const n=o.createEmitAndSemanticDiagnosticsBuilderProgram(...e);if(t.watchEmit){const e=n.emit;n.emit=(...o)=>{const n=e(...o);return n.emitSkipped||t.watchEmit(),n}}return n}),s,s))}},"run-mypack":(e,t)=>{const o=require("path"),n=require("chalk"),r=require("crypto-js"),i=require("filesize"),a=require("source-map"),s=require("terser"),l=t("common");e.pack=async function(e){if(e.lastResult?l.logInfo("mpk","repack"):l.logInfo("mpk",n`pack {yellow ${e.entry}}`),!e.files.some((t=>t.name==e.entry)))return l.logError("mpk","invalid entry"),{success:!1};const t=o.dirname(e.entry),c=e.sourceMap?e.files.filter((e=>e.name.endsWith(".js"))).map((({name:t,content:o})=>({name:t,jsContent:o,mapContent:e.files.find((e=>e.name==t+".map")).content}))):e.files.map((({name:e,content:t})=>({name:e,jsContent:t,mapContent:null})));let m=null;e.sourceMap&&(m=new a.SourceMapGenerator({file:e.output}));let p=3;const d=[];let u="app"==e.type?"((modules) => { const mycache = {};\n(function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n":"module.exports = ((modules) => { const mycache = {};\nreturn (function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n";for(let{name:n,jsContent:i,mapContent:s}of c){let f=o.relative(t,n);f.endsWith(".js")&&(f=f.slice(0,-3)),f.endsWith("index")&&(f=f.slice(0,-5)),0==f.length&&(f=".");let y=i;for(;;){const e=/require\("(?<moduleName>\.[\.\w\-\/]*)"\);/,r=e.exec(y);if(!r)break;const i=o.join(o.dirname(n),r.groups.moduleName);let a=c.some((e=>e.name==i))?i:c.some((e=>e.name==i+".js"))?i+".js":c.some((e=>e.name==i+"/index.js"))?i+"/index.js":null;if(null===a)return l.logError("mpk",`${n}: invalid module name ${r.groups.moduleName} at ${r.index}`),{success:!1};a=o.relative(t,a),a=a.slice(0,-3),a.endsWith("index")&&(a=a.slice(0,-5)),0==a.length&&(a="."),y=y.replace(e,`__myrequire__("${a}");`)}if(u+=`'${f}': (exports, __myrequire__) => {\n${y}}, `,d.push({fileName:n,moduleName:f,contentLength:y.length,hash:r.SHA256(y).toString()}),e.sourceMap){let e=null;(await new a.SourceMapConsumer(JSON.parse(s))).eachMapping((t=>{null===e&&(e=t.generatedLine),m.addMapping({source:o.resolve(t.source),original:{line:t.originalLine,column:t.originalColumn},generated:{line:t.generatedLine-e+p+1,column:t.generatedColumn}})}))}p+=y.split("\n").length}u+="})\n";let f=m?.toString();if(e.minify){const t=await s.minify(u,{sourceMap:!!e.sourceMap&&{content:f,filename:e.output,url:e.output+".map"}});u=t.code,f="object"==typeof t.map?JSON.stringify(t.map):t.map}const y=r.SHA256(u).toString();if(y===e.lastResult?.hash)l.logInfo("mpk","completed with no change");else if(e.lastResult||(l.logInfo("mpk","completed with no error"),e.output&&l.logInfo("mpk",n`asset {yellow ${e.output}}`),l.logInfo("mpk",n`asset size {gray ${i(u.length)}} compression rate {gray ${(u.length/c.reduce(((e,t)=>e+t.jsContent.length),0)*100).toFixed(2)}%}`)),e.printModules)if(e.lastResult){for(const t of d.filter((t=>!e.lastResult.modules.some((e=>e.fileName==t.fileName)))))console.log(n`  {gray +} ${t.fileName} {cyan ${t.moduleName}} {gray size ${i(t.contentLength)}}`);for(const[t]of d.map((t=>[t,e.lastResult.modules.find((e=>e.fileName==t.fileName))])).filter((([e,t])=>t&&e.hash!=t.hash)))console.log(n`  {gray *} ${t.fileName} {cyan ${t.moduleName}} {gray size ${i(t.contentLength)}}`);for(const t of e.lastResult.modules.filter((e=>!d.some((t=>t.fileName==e.fileName)))))console.log(n`  {gray - removed ${t.fileName}} {cyan ${t.moduleName}}`)}else for(const{fileName:e,moduleName:t,contentLength:o}of d)console.log(n`   {gray +} ${e} {cyan ${t}} {gray size ${i(o)}}`);return{success:!0,jsContent:u,mapContent:f,hash:y,modules:d}}},"build-self":(e,t)=>{const o=require("fs"),n=require("chalk"),r=t("common"),i=t("run-typescript"),a=t("run-mypack"),s=["script/index.ts"],l={types:["node"],outDir:"/vbuild"};function c(e){return(t,o)=>{e.push({name:t,content:o})}}const m={type:"app",entry:"/vbuild/index.js",files:[],output:"maka",minify:!0};e.build=async function(){r.logInfo("mka",n`{yellow self}`);const e=[];i.transpileOnce(s,{...l,writeFileHook:c(e)})||(r.logError("mka","self failed at transpile typescript"),process.exit(1));const t=await a.pack({...m,files:e});t.success||(r.logError("mka","self failed at pack"),process.exit(1)),o.writeFileSync("maka","#!/usr/bin/env node\n"+t.jsContent),r.logInfo("mka","self completed successfully")}},"build-server-core":(e,t)=>{const o=require("child_process"),n=require("fs/promises"),r=require("chalk"),i=t("common"),a=t("admin"),s=t("run-typescript"),l=t("run-mypack"),c="src/server-core/index.ts",m={sourceMap:!0,outDir:"/vbuild",readFileHook:i.commonReadFileHook,watchReadFileHook:i.commonWatchReadFileHook},p={type:"app",entry:"/vbuild/server-core/index.js",files:[],sourceMap:!0,output:"dist/home/server.js",printModules:!0,minify:!0};let d=null;function u(){function e(){i.logInfo("mds","start server"),d=o.spawn("node",["dist/home/server.js"]),d.stdout.pipe(process.stdout),d.stderr.pipe(process.stderr),d.on("error",(e=>{i.logError("mds",`server process error ${e.message}`)})),d.on("exit",(e=>{(0==e?i.logInfo:i.logError)("mds",`server process exited with code ${e}`),d=null}))}null!=d?(d.once("exit",e),a.admin({type:"shutdown"})):e()}e.startOrRestartServer=u,e.build=async function(e){e?function(){i.logInfo("mka",r`watch {yellow server-core}`),process.on("exit",(()=>d?.kill()));const e=[];let t=null;s.transpileWatch(c,{...m,watchWriteFileHook:(t,o)=>{const n=e.findIndex((e=>e.name==t));n>=0?e.splice(n,1,{name:t,content:o}):e.push({name:t,content:o})},watchEmit:async()=>{const o=await l.pack({...p,files:e,lastResult:t});o.success&&(await n.writeFile("dist/home/server.js",o.jsContent),await n.writeFile("dist/home/server.js.map",o.mapContent)),o.hash!=t?.hash&&u(),t=o}})}():await async function(){i.logInfo("mka",r`{yellow server-core}`);const e=[];s.transpileOnce(c,{...m,writeFileHook:(t,o)=>e.push({name:t,content:o})})||(i.logError("mka",r`{yellow server-core} failed at transpile typescript`),process.exit(1));const t=await l.pack({...p,files:e});t.success||(i.logError("mka",r`{yellow server-core} failed at pack`),process.exit(1)),await n.writeFile("dist/home/server.js",t.jsContent),await n.writeFile("dist/home/server.js.map",t.mapContent),i.logInfo("mka","server-core completed successfully")}()}},"run-sass":(e,t)=>{const o=require("chalk"),n=require("node-sass"),r=t("common");e.transpile=async function(e){return r.logInfo("css",o`transpile {yellow ${e.file}}`),new Promise(((t,o)=>{n.render(e,((n,i)=>{n?(r.logError("css",`error at ${e.file}:${n.line}:${n.column}: ${n.message}`),o()):(r.logInfo("css",`transpile completed in ${i.stats.duration}ms`),t(i.css.toString("utf-8")))}))}))}},"build-simple-page":(e,t)=>{const o=require("fs"),n=require("fs/promises"),r=require("chalk"),i=t("common"),a=t("run-typescript"),s=t("run-sass"),l=t("admin"),c=e=>"index"==e?"www":"login",m=e=>`src/home-page/${e}.ts`,p={outDir:"dist/home/",lib:["lib.dom.d.ts"],readFileHook:i.commonReadFileHook,watchReadFileHook:i.commonWatchReadFileHook},d=e=>({file:`src/home-page/${e}.sass`,outputStyle:"compressed"});e.build=async function(e,t){t?function(e){i.logInfo("mka",r`watch {yellow ${e}-page}`),"index"!=e&&a.transpileWatch(m(e),{...p,watchEmit:()=>{l.admin({type:"reload-static",key:c(e)}).catch((()=>{}))}}),o.watchFile(`src/home-page/${e}.html`,{persistent:!1},((t,n)=>{t.mtime!=n.mtime&&(i.logInfo("htm",r`copy {yellow ${e}.html}`),o.copyFileSync(`src/home-page/${e}.html`,`dist/home/${e}.html`),i.logInfo("htm","copy completed"),l.admin({type:"reload-static",key:c(e)}).catch((()=>{})))}));const t=d(e);o.watchFile(t.file,{persistent:!1},((t,n)=>{t.mtime!=n.mtime&&s.transpile(d(e)).then((t=>{o.writeFileSync(`dist/home/${e}.css`,t),l.admin({type:"reload-static",key:c(e)}).catch((()=>{}))})).catch((()=>{}))})),process.on("SIGINT",(()=>{o.unwatchFile(`src/home-page/${e}.html`),o.unwatchFile(t.file),process.exit(0)})),i.logInfo("mka","tsc watch and fs watch setup")}(e):await async function(e){i.logInfo("mka",r`{yellow ${e}-page}`),"index"!=e&&(a.transpileOnce(m(e),p)||(i.logError("mka",r`{yellow ${e}-page} failed at transpile typescript`),process.exit(1)));try{const t=await s.transpile(d(e));await n.writeFile(`dist/home/${e}.css`,t)}catch{i.logError("mka",r`{yellow ${e}-page} failed at transpile stylesheet`),process.exit(1)}i.logInfo("htm",r`copy {yellow ${e}.html}`),await n.copyFile(`src/home-page/${e}.html`,`dist/home/${e}.html`),i.logInfo("htm","copy completed"),await l.admin({type:"reload-static",key:c(e)}),i.logInfo("mka",`build ${e}-page completed succesfully`)}(e)}},"run-codegen":(e,t)=>{const o=require("fs/promises"),n=require("chalk"),r=require("xml2json"),i=t("common"),a=["GET","POST","PUT","PATCH","DELETE"],s={GET:"get",POST:"post",PUT:"put",PATCH:"patch",DELETE:"del"},l=["id","number","string","boolean","date","time"],c={id:{pattern:"\\d+",validator:"validateId",tsType:"number"},number:{pattern:"\\d+",validator:"validateNumber",tsType:"number"},string:{pattern:".+",validator:"validateString",tsType:"string"},boolean:{pattern:"(true|false)",validator:"validateBoolean",tsType:"boolean"},date:{pattern:"\\d{6}",validator:"validateDate",tsType:"Dayjs"},time:{pattern:"\\d{12}",validator:"validateTime",tsType:"Dayjs"}};async function m(e){const t=await o.readFile(`src/${e}/api.xml`,"utf-8"),{version:n,api:i}=r.toJson(t,{object:!0})[`${e}-api`];return{version:n,definitions:i.map(((e,t)=>{const o=e.name;if(!o)throw new Error(`index ${t} api name is required`);const n=e.method;if(!a.includes(n))throw new Error(`api ${o} invalid method`);const r=e.path;if(!r)throw new Error(`api ${o} path is required`);if(!r.startsWith("/"))throw new Error(`api ${o} path should be absolute`);const i=function(e,t){const o=[];for(;;){const n=/\{(?<parameterName>[\w\_]+):(?<parameterType>\w+)\}/.exec(t);if(!n)break;if(10==o.filter((e=>"parameter"==e.type)).length)throw new Error(`api ${e} too many parameters`);const[r,i]=[n.groups.parameterName,n.groups.parameterType];if(!l.includes(i))throw new Error(`api ${e} parameter ${r} invalid type ${i}`);0!=n.index&&o.push({type:"normal",value:t.slice(0,n.index)}),o.push({type:"parameter",parameterName:r,parameterType:i}),t=t.slice(n.index+r.length+i.length+3)}return t.length&&o.push({type:"normal",value:t}),o}(o,r),[s,c]=[e["body-type"],e["body-name"]];if(["POST","PUT","PATCH"].includes(n)&&(!s||!c))throw new Error(`api ${o} body is required for ${n}`);return{namespace:e.namespace||"default",apiName:o,method:n,apiPath:i,bodyType:s,bodyName:c,returnType:e["return-type"]||"void"}}))}}e.generate=async function(e,t){return"server"==t?await async function(e){const t=`src/${e}/server/index.ts`;let r;i.logInfo("fcg",n`generate {yellow ${t}}`);try{r=await m(e)}catch(e){return i.logError("fcg",e.message),!1}const{version:a,definitions:s}=r;let p="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==s.length)return p+="// empty\n",await o.writeFile(t,p),i.logInfo("fcg","generate completed with empty"),!0;p+=`import { WebContext, ${l.filter((e=>s.some((t=>t.apiPath.some((t=>"parameter"==t.type&&t.parameterType==e)))))).map((e=>c[e].validator)).concat(s.some((e=>["PUT","POST","PATCH"].includes(e.method)))?["validateBody"]:[]).join(", ")} } from '../../shared/api-server';\n`,p+="import { MyError } from '../../shared/error';\n";for(const e of s.map((e=>e.namespace)).filter(((e,t,o)=>o.indexOf(e)==t)))p+=`import { ${s.filter((t=>t.namespace==e)).map((e=>e.apiName)).join(", ")} } from './${e}';\n`;p+="\n",p+="export async function dispatch(ctx: WebContext) {\n",p+="    let match: RegExpExecArray;\n",p+=`    if (!ctx.path.startsWith('/${e}/v${a}')) { throw new MyError('not-found', 'invalid invocation version'); }\n`,p+=`    const methodPath = \`\${ctx.method} \${ctx.path.slice(${e.length+a.length+3})}\`;\n`,p+="\n";for(const e of s){const{apiName:t,method:o,apiPath:n,bodyType:r,returnType:i}=e;p+=`    match = /^${o} `;for(const e of n)"normal"==e.type?p+=e.value.split("/").join("\\/"):p+=`(?<${e.parameterName}>${c[e.parameterType].pattern})`;p+="$/.exec(methodPath); if (match) {\n",p+="        ",i&&"void"!=i&&(p+="ctx.body = "),p+=`await ${t}(ctx.state`;for(const{parameterName:e,parameterType:t}of n.filter((e=>"parameter"==e.type)))p+=`, ${c[t].validator}('${e}', match.groups['${e}'])`;r&&(p+=", validateBody(ctx.request.body)"),p+=");\n","POST"==o?p+="        ctx.status = 201;\n":"DELETE"==o&&(p+="        ctx.status = 204;\n"),p+="        return;\n",p+="    }\n"}return p+="\n",p+="    throw new MyError('not-found', 'invalid invocation');\n",p+="}\n",await o.writeFile(t,p),i.logInfo("fcg","generate completed"),!0}(e):await async function(e){const t=`src/${e}/client/api.ts`;let r;i.logInfo("fcg",n`generate {yellow ${t}}`);try{r=await m(e)}catch(e){return i.logError("fcg",e.message),!1}const{version:l,definitions:p}=r;let d="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==p.length)return d+="// empty\n",await o.writeFile(t,d),i.logInfo("fcg","generate completed with empty"),!0;p.some((e=>e.apiPath.some((e=>"parameter"==e.type&&["date","time"].includes(e.parameterType)))))&&(d+="import type { Dayjs } from 'dayjs';\n"),d+=`import { ${a.filter((e=>p.some((t=>t.method==e)))).map((e=>s[e])).join(", ")} } from '../../shared/api-client';\n`,d+=`import type { ${p.filter((e=>!!e.bodyType)).map((e=>e.bodyType)).filter(((e,t,o)=>o.indexOf(e)==t)).join(",")} } from '../api';\n`,d+="\n";for(const t of p){const{apiName:o,method:n,apiPath:r,bodyType:i,bodyName:a,returnType:m}=t;d+=`export const ${o} = (`;for(const{parameterName:e,parameterType:t}of r.filter((e=>"parameter"==e.type)))d.endsWith("(")||(d+=", "),d+=`${e}: ${c[t].tsType}`;i&&(d.endsWith("(")||(d+=", "),d+=`${a}: ${i}`),d+=`): Promise<${m}> => ${s[n]}(\`/${e}/v${l}`;for(const e of r)"normal"==e.type?d+=e.value:"date"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDD')}`:"time"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDDHHmmdd')}`:d+=`\${${e.parameterName}}`;d+="`",i&&(d+=`, ${a}`),d+=");\n"}return await o.writeFile(t,d),i.logInfo("fcg","generate completed"),!0}(e)}},"build-app-server":(e,t)=>{const o=require("fs"),n=require("fs/promises"),r=require("chalk"),i=t("admin"),a=t("common"),s=t("run-codegen"),l=t("run-typescript"),c=t("run-mypack"),m=e=>`src/${e}/server/index.ts`,p={sourceMap:!0,outDir:"/vbuild",readFileHook:a.commonReadFileHook,watchReadFileHook:a.commonWatchReadFileHook},d=(e,t,o)=>({type:"lib",entry:`/vbuild/${e}/server/index.js`,files:t,sourceMap:!0,output:`dist/${e}/server.js`,printModules:!0,minify:!0,lastResult:o});e.build=async function(e,t){t?function(e){a.logInfo("mka",r`watch {yellow ${e}-server}`),o.watchFile(`src/${e}/api.xml`,{persistent:!1},((t,o)=>{t.mtime!=o.mtime&&s.generate(e,"server")})),process.on("SIGINT",(()=>{o.unwatchFile(`src/${e}/api.xml`),process.exit(0)}));const t=[];let u=null;l.transpileWatch(m(e),{...p,watchWriteFileHook:(e,o)=>{const n=t.findIndex((t=>t.name==e));n>=0?t.splice(n,1,{name:e,content:o}):t.push({name:e,content:o})},watchEmit:async()=>{const o=await c.pack(d(e,t,u));o.success&&(await n.writeFile(`dist/${e}/server.js`,o.jsContent),await n.writeFile(`dist/${e}/server.js.map`,o.mapContent)),o.hash!=u?.hash&&await i.admin({type:"reload-server",app:e}),u=o}}),s.generate(e,"server")}(e):await async function(e){a.logInfo("mka",r`{yellow ${e}-server}`),await s.generate(e,"server")||(a.logError("mka",r`{yellow ${e}-server} failed at code generation`),process.exit(1));const t=[];l.transpileOnce(m(e),{...p,writeFileHook:(e,o)=>t.push({name:e,content:o})})||(a.logError("mka",r`{yellow ${e}-server} failed at transpile typescript`),process.exit(1));const o=await c.pack(d(e,t));o.success||(a.logError("mka",r`{yellow ${e}-server} failed at pack`),process.exit(1)),await n.writeFile(`dist/${e}/server.js`,o.jsContent),await n.writeFile(`dist/${e}/server.js.map`,o.mapContent),await i.admin({type:"reload-server",app:e}),a.logInfo("mka",`${e}-server completed successfully`)}(e)}},"build-app-client":(e,t)=>{const o=require("fs"),n=require("chalk"),r=t("admin"),i=t("common"),a=t("run-codegen"),s=t("run-typescript"),l=t("run-sass"),c={lib:["lib.dom.d.ts"],sourceMap:!0,outDir:"/vbuild",jsx:s.JsxEmit.React,module:s.ModuleKind.ESNext,target:s.ScriptTarget.ES2015,esModuleInterop:!0,readFileHook:i.commonReadFileHook,watchReadFileHook:i.commonWatchReadFileHook};e.build=async function(e,t){t||await async function(e){i.logInfo("mka",n`{yellow ${e}-client}`),o.existsSync(`src/${e}/api.xml`)&&(await a.generate(e,"client")||(i.logError("mka",n`{yellow ${e}-client} failed at code generation`),process.exit(1)));const t=[];s.transpileOnce((e=>`src/${e}/client/index.tsx`)(e),{...c,writeFileHook:(e,o)=>t.push({name:e,content:o})})||(i.logError("mka",n`{yellow ${e}-client} failed at transpile typescript`),process.exit(1));let m=t.find((e=>"/vbuild/index.js"==e.name)).content;m=m.slice(m.indexOf("\n")+1),m=m.slice(m.indexOf("\n")+1);const p=m.slice(0,m.indexOf("\n"));m=`const ${p.slice(p.indexOf("{"),p.indexOf("}")+1)} = antd;`+m.slice(m.indexOf("\n")),await o.promises.writeFile(`dist/${e}/client.js`,m);try{const t=await l.transpile((e=>({file:`src/${e}/client/index.sass`,outputStyle:"compressed"}))(e));await o.promises.writeFile(`dist/${e}/index.css`,t)}catch{i.logError("mka",n`{yellow ${e}-client} failed at transpile stylesheet`),process.exit(1)}i.logInfo("htm",n`copy {yellow src/${e}/index.html}`),await o.promises.copyFile(`src/${e}/index.html`,`dist/${e}/index.html`),i.logInfo("htm","copy completed"),await r.admin({type:"reload-static",key:e}),i.logInfo("mka",`${e}-client completed successfully`)}(e)}},".":(e,t)=>{const o=t("admin"),n=t("common"),r=t("build-self"),i=t("build-server-core"),a=t("build-simple-page"),s=t("build-app-server"),l=t("build-app-client");function c(e){if(JSON.parse(n.compileTimeConfig.APP_NAMES).includes(e))return e;console.log("unknown app name"),process.exit(1)}const[m,p]=[process.argv[2],process.argv[3]];"self"==m?r.build():"server-core"==m?i.build(!1):"watch"==m&&"server-core"==p?i.build(!0):"index-page"==m?a.build("index",!1):"watch"==m&&"index-page"==p?a.build("index",!0):"login-page"==m?a.build("login",!1):"watch"==m&&"login-page"==p?a.build("login",!0):m.endsWith("-client")?l.build(c(m.slice(0,-7)),!1):m.endsWith("-server")?s.build(c(m.slice(0,-7)),!1):"watch"==m&&p.endsWith("-client")?l.build(c(p.slice(0,-7)),!0):"watch"==m&&p.endsWith("-server")?s.build(c(p.slice(0,-7)),!0):"watch"==m&&p?(l.build(c(p),!0),s.build(c(p),!0)):"shutdown"==m?o.admin({type:"shutdown"}).then((()=>process.exit(1))):"reload-static"==m?o.admin({type:"reload-static",key:"www"==p||"login"==p?p:c(p)}).then((()=>process.exit(1))):"reload-server"==m?o.admin({type:"reload-server",app:c(p)}).then((()=>process.exit(1))):"expire-device"==m?o.admin({type:"expire-device",deviceId:parseInt(p)}).then((()=>process.exit(1))):(console.log("unknown command"),process.exit(1))}});