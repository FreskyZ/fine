#!/usr/bin/env node
(e=>{const n={};!function o(t){return t in n||(n[t]={},e[t](n[t],o)),n[t]}(".")})({"admin-base":(e,n)=>{const o=require("net");const t=new(require("async-mutex").Mutex);e.admin=async function(e){await t.runExclusive((async()=>await async function(e){const n=o.createConnection("/tmp/fps.socket").ref();return new Promise(((o,t)=>{const s=JSON.stringify(e);n.on("error",(e=>{"code"in e&&"ENOENT"==e.code?(console.log(`[adm] admin socket not open, command ${s} discarded`),o()):(console.log(`[adm] socket error: ${e.message}`),t())})),n.on("timeout",(()=>{console.log("[adm] socket timeout"),n.destroy(),t()})),n.once("data",(e=>{"ACK"==e.toString("utf-8")&&(console.log(`[adm] command ${s} acknowledged`),setTimeout((()=>{n.destroy(),o()}),0))})),n.write(s)}))}(e)))}},common:(e,n)=>{const o=require("fs"),t=require("chalk"),s=require("dayjs");e.projectDirectory="<PROJECTDIR>",e.nodePackage=JSON.parse(o.readFileSync("package.json","utf-8")),e.logInfo=function(e,n){console.log(t`[${s().format("HH:mm:ss")}][{cyan ${e}}] ${n}`)},e.logError=function(e,n){console.log(t`[${s().format("HH:mm:ss")}][{red ${e}}] ${n}`)},process.on("unhandledRejection",(e=>{console.log("unhandled reject: ",e),process.exit(0)}))},"run-typescript":(e,n)=>{const o=require("typescript"),t=require("chalk"),s=n("common");e.ModuleKind=o.ModuleKind,e.ModuleResolutionKind=o.ModuleResolutionKind;const r={lib:["lib.es2020.d.ts"],target:o.ScriptTarget.ES2020,module:o.ModuleKind.CommonJS,moduleResolution:o.ModuleResolutionKind.NodeJs,noEmitOnError:!0,noImplicitAny:!0,noFallthroughCaseInSwitch:!0,noImplicitReturns:!0,noImplicitThis:!0,noUnusedLocals:!0,noUnusedParameters:!0,strictFunctionTypes:!0,strictBindCallApply:!0,removeComments:!0},i={[o.DiagnosticCategory.Warning]:t.red,[o.DiagnosticCategory.Error]:t.red,[o.DiagnosticCategory.Suggestion]:t.green,[o.DiagnosticCategory.Message]:t.cyan};function l({category:e,code:n,messageText:s,file:r,start:l}){const a=6031==n||6032==n?t`[{cyan tsc}] `:(0,i[e])(`  TS${n} `);let c="";if(r){const{line:e,character:n}=o.getLineAndCharacterOfPosition(r,l);c=t`{yellow ${r.fileName}:${e+1}:${n+1}} `}let u=o.flattenDiagnosticMessageText(s,"\n");u.includes("\n")&&(u="\n"+u),console.log(a+c+u)}e.transpileOnce=function(e,n){s.logInfo("tsc",t`once {yellow ${e}}`);const i={...r,...n,lib:"lib"in n?[...r.lib,...n.lib]:r.lib},a=function(e){const n=o.createCompilerHost(e);if(e.readFileHook){const o=n.readFile;n.readFile=n=>e.readFileHook(n,o)}const t=n.writeFile;return n.writeFile=(n,o,s,r,i)=>{n.endsWith(".js")&&((o=o.slice(o.indexOf("\n",o.indexOf("\n")+1)+1)).startsWith("exports.")&&(o=o.slice(o.indexOf("\n")+1)),e.sourceMap?o=o.slice(0,o.lastIndexOf("\n")+1):o.endsWith("\n")||(o+="\n")),e.writeFileHook?e.writeFileHook(n,o,s,r,i,t):t(n,o,s,r,i)},n}(i),c=o.createProgram(Array.isArray(e)?e:[e],i,a),{diagnostics:u}=c.emit(),{success:m,message:d}=function(e){const n=e.filter((e=>e.category==o.DiagnosticCategory.Error||o.DiagnosticCategory.Warning)).length,s=e.length-n;let r;return r=0==s&&0==n?"no diagnostic":0!=s&&0==n?t`{yellow ${s}} infos`:0==s?t`{yellow ${n}} errors`:t`{yellow ${n}} errors and {yellow ${s}} infos`,{success:0==n,message:r}}(u);return m?s.logInfo("tsc",`completed with ${d}`):s.logError("tsc",`completed with ${d}`),u.map(l),u.length>0&&s.logError("tsc","end of transpile diagnostics"),m},e.transpileWatch=function(e,n){if(s.logInfo("tsc",`transpiling watching ${e}`),n.watchReadFileHook){const e=o.sys.readFile;o.sys.readFile=(o,t)=>n.watchReadFileHook(o,t,e)}if(n.watchWriteFileHook){const e=o.sys.writeFile;o.sys.writeFile=(o,t,s)=>n.watchWriteFileHook(o,t,s,e)}o.createWatchProgram(o.createWatchCompilerHost([e],{...r,...n},o.sys,o.createEmitAndSemanticDiagnosticsBuilderProgram,l,l))}},"run-mypack":(e,n)=>{const o=require("crypto"),t=require("path"),s=require("chalk"),r=require("filesize"),i=require("source-map"),l=require("terser"),a=n("common");e.bundleOnce=async function(e){if(a.logInfo("mpk",s`once {yellow ${e.entry}}`),!e.files.some((n=>n.name==e.entry)))return a.logError("mpk","invalid entry"),[null,null,null];const n=t.dirname(e.entry),c=e.sourceMap?e.files.filter((e=>e.name.endsWith(".js"))).map((({name:n,content:o})=>({name:n,jsContent:o,mapContent:e.files.find((e=>e.name==n+".map")).content}))):e.files.map((({name:e,content:n})=>({name:e,jsContent:n,mapContent:null})));let u=null;e.sourceMap&&(u=new i.SourceMapGenerator({file:e.output}));let m=3,d="((modules) => { const mycache = {};\n(function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n";for(let{name:o,jsContent:s,mapContent:r}of c){let l=t.relative(n,o);l.endsWith(".js")&&(l=l.slice(0,-3)),l.endsWith("index")&&(l=l.slice(0,-5)),0==l.length&&(l=".");let p=s;for(;;){const e=/require\("(?<moduleName>\.[\.\w\-\/]*)"\);/,s=e.exec(p);if(!s)break;const r=t.join(t.dirname(o),s.groups.moduleName);let i=c.some((e=>e.name==r))?r:c.some((e=>e.name==r+".js"))?r+".js":c.some((e=>e.name==r+"/index.js"))?r+"/index.js":null;if(null===i)return a.logError("mpk",`invalid module name ${s.groups.moduleName} at ${s.index}`),[null,null,null];i=t.relative(n,i),i=i.slice(0,-3),i.endsWith("index")&&(i=i.slice(0,-5)),0==i.length&&(i="."),p=p.replace(e,`__myrequire__("${i}");`)}if(d+=`'${l}': (exports, __myrequire__) => {\n${p}}, `,e.sourceMap){let e=null;(await new i.SourceMapConsumer(JSON.parse(r))).eachMapping((n=>{null===e&&(e=n.generatedLine),u.addMapping({source:t.resolve(n.source),original:{line:n.originalLine,column:n.originalColumn},generated:{line:n.generatedLine-e+m+1,column:n.generatedColumn}})}))}m+=p.split("\n").length}if(d+="})\n",e.minify){d=(await l.minify(d)).code}const p=o.createHash("md5").update(d,"utf8").digest("hex");if(a.logInfo("mpk","completed with no error"),e.output&&a.logInfo("mpk",s`asset {yellow ${e.output}}`),a.logInfo("mpk",s`asset hash {yellow ${p}}`),a.logInfo("mpk",s`asset size {gray ${r(d.length)}} compression rate {gray ${(d.length/c.reduce(((e,n)=>e+n.jsContent.length),0)*100).toFixed(2)}%}`),e.printModules)for(const{name:e,jsContent:n}of c)console.log(s`   {gray +} ${e} {gray size ${r(n.length)}}`);return[d,u?.toString(),p]}},"build-self":(e,n)=>{const o=require("fs"),t=require("chalk"),s=n("common"),r=n("run-typescript"),i=n("run-mypack"),l=["script/index.ts"],a={types:["node"],outDir:"/vbuild"};function c(e){return(n,o)=>{e.push({name:n,content:o})}}const u={entry:"/vbuild/index.js",files:[],output:"maka",minify:!0};e.build=async function(){s.logInfo("mka",t`{yellow self}`);const e=[];r.transpileOnce(l,{...a,writeFileHook:c(e)})||(s.logError("mka","self failed at transpile typescript"),process.exit(1));const[n]=await i.bundleOnce({...u,files:e});n||(s.logError("mka","self failed at bundle"),process.exit(1)),o.writeFileSync("maka","#!/usr/bin/env node\n"+n),s.logInfo("mka","self completed successfully")}},"run-webpack":(e,n)=>{const o=require("chalk"),t=require("filesize"),s=require("webpack");function r(e,n){console.log(o`[{cyan wpb}] bundled {yellow ${e.assets.length}} asset in {yellow ${e.time}ms}, hash {yellow ${e.hash}}`);for(const n of e.errors)console.error(`error: ${n.message}`);for(const n of e.warnings)console.error(`warning: ${n}`);const s=e.chunks.reduce(((e,n)=>(e.push(...n.modules),e)),[]);if(null==n){for(let n=0;n<e.assets.length;++n){const s=e.assets[n];console.log(o`  {gray asset#}${n} {yellow ${s.name}}`+o` {gray size} {yellow ${t(s.size)}} {gray chunks} [${s.chunks.join(", ")}]`)}for(const n of e.chunks){console.log(o`  {gray chunk#}${n.id} {yellow ${n.names.join(",")}} {gray size} {yellow ${t(n.size)}}`);const e=[];for(let s=0;s<n.modules.length;++s){const r=n.modules[s];r.name.startsWith("external")?e.push(r.name.slice(10,-1)):console.log(o`    {gray #${s}} ${r.name} {gray size ${t(r.size)}}`)}for(let n=0;n<Math.ceil(e.length/5);++n)0==n?console.log(o`    {gray +} ${e.length} {gray external modules} ${e.filter(((e,n)=>0==Math.floor(n/5))).join(", ")}`):console.log(o`                        + ${e.filter(((e,o)=>Math.floor(o/5)==n)).join(", ")}`)}}else{const r=s.filter((e=>!n.some((n=>n.name===e.name)))),i=n.filter((e=>!s.some((n=>n.name===e.name))));for(let n=0;n<e.assets.length;++n){const s=e.assets[n];console.log(o`  {gray asset#}${n} {yellow ${s.name}}`+o` {gray size} {yellow ${t(s.size)}} {gray chunks} [${s.chunks.join(", ")}]`+(n==e.assets.length-1&&0==r.length&&0==i.length?o`{gray [no module list change]}`:""))}for(const e of r)console.log(o`  + ${e.name} {gray size ${t(e.size)}}`);for(const e of i)console.log(o`  - {gray removed ${e.name}}`)}return s}e.bundleOnce=async function(e,n,o){console.log(`[wpb] bundling ${e.entry}`);const t=!("printStat"in e)||e.printStat;delete e.printStat,s(e).run(((e,s)=>{if(e)return console.log("[wpb] critical error: "+e.message),void n(null);const i=s?.toJson();t?r(i,null):console.log("[wpb] bundled completed successfully"),o(i)}))},e.bundleWatch=async function(e,n){console.log(`[wpb] bundling watching ${e.entry}`);let o=null,t=null;s({...e,watch:!0},((e,s)=>{if(e)return void console.log("[wpb] critical error: "+e.message);const i=s?.toJson();if(i.hash==o)return o=i.hash,void console.log("[wpb] rebundle no change");o=i.hash,t=r(i,t),n(i)}))}},"run-sourcemap":(e,n)=>{const o=require("fs"),t=require("path"),s=require("source-map"),r=n("common");e.mergeSourceMap=async function(e,n){const i=new s.SourceMapGenerator({file:"server.js",sourceRoot:""}),l={},a=JSON.parse(o.readFileSync(e,"utf-8")),c=await new s.SourceMapConsumer(a);for(const e of c.sources){if(!e.startsWith("webpack://fps/build/"))continue;const n=e.slice(14),a=t.join(r.projectDirectory,n+".map");if(!o.existsSync(a))continue;a in l||(l[a]=await new s.SourceMapConsumer(JSON.parse(o.readFileSync(a,"utf-8"))));l[a].eachMapping((({originalLine:o,originalColumn:t,generatedLine:s,generatedColumn:r})=>{const l=c.generatedPositionFor({line:s,column:r,source:e});null!=l.line&&null!=l.column&&i.addMapping({source:"src"+n.slice(5,-3)+".ts",original:{line:o,column:t},generated:{line:l.line,column:l.column}})}))}o.writeFileSync(e,i.toString()),n||console.log("[smm] source map merged")}},"build-server-core":(e,n)=>{const o=require("child_process"),t=require("fs/promises"),s=require("path"),r=require("chalk"),i=n("common"),l=n("admin-base"),a=n("run-typescript"),c=n("run-webpack"),u=n("run-mypack"),m=n("run-sourcemap"),d="src/server-core/index.ts",p={sourceMap:!0,outDir:"/vbuild"},g={entry:"/vbuild/server-core/index.js",files:[],sourceMap:!0,output:"dist/home/server.js",printModules:!0,minify:!1},h={mode:"development",entry:s.join(i.projectDirectory,"build/server-core/index.js"),output:{filename:"server.js",path:s.join(i.projectDirectory,"dist/home")},target:"node",externals:Object.keys(i.nodePackage.dependencies).concat(["dayjs/plugin/utc"]).reduce(((e,n)=>({...e,[n]:`commonjs ${n}`})),{}),devtool:"hidden-nosources-source-map"};let f=null;function y(){console.log("[mka] building watching server-core"),process.on("exit",(()=>f.kill())),a.transpileWatch(d,p),c.bundleWatch(h,(()=>{m.mergeSourceMap("dist/home/server.js.map",!0).then((()=>{!function(){function e(){console.log("[mds] starting server process"),f=o.spawn("node",["dist/home/server.js"]),f.stdout.pipe(process.stdout),f.stderr.pipe(process.stderr),f.on("error",(e=>console.log(`[mds] server process error ${e.message}`))),f.on("exit",(e=>{console.log(`[mds] server process exited with code ${e}`),f=null}))}null!=f?(console.log(`[mds] shutdown previous server process ${f.pid}`),f.once("exit",e),l.admin({type:"shutdown"})):e()}()}))}))}e.build=async function(e){e?y():async function(){i.logInfo("mka",r`{yellow server-core}`);const e=[];a.transpileOnce(d,{...p,writeFileHook:(n,o)=>{e.push({name:n,content:o})}})||(i.logError("mka",r`{yellow server-core} failed at transpile typescript`),process.exit(1));const[n,o]=await u.bundleOnce({...g,files:e});n||(i.logError("mka",r`{yellow server-core} failed at bundle`),process.exit(1)),await t.writeFile("build/server.js",n),await t.writeFile("build/server.js.map",o),i.logInfo("mka","server-core completed successfully")}()}},"build-home-page":(e,n)=>{const o=require("fs"),t=n("run-typescript"),s=require("node-sass"),r=n("admin-base"),i="src/home-page/index.ts",l={types:["node"],outDir:"build/home-page",lib:["lib.dom.d.ts"],writeFileHook:(e,n,o,t,s,r)=>{if("build/home-page/index.js"!=e)return r(e,n,o,t,s);c(n)},watchWriteFileHook:(e,n,o,t)=>{if("build/home-page/index.js"!=e)return t(e,n,o);c(n),console.log("[mak] reload index.js"),r.admin({type:"content-update",parameter:{app:"www",name:"index.js"}}).catch((()=>{}))}},a={file:"src/home-page/index.sass",outputStyle:"compressed"};function c(e){const n=e.indexOf("\n"),t=e.indexOf("\n",n+1);o.writeFileSync("dist/home/client.js",e.slice(t+1))}async function u(){return console.log(`[css] transpiling ${a.file}`),new Promise(((e,n)=>{s.render(a,((t,s)=>{if(t)return console.log(`[css] error at ${a.file}:${t.line}:${t.column}: ${t.message}`),void n();o.writeFileSync("dist/home/index.css",s.css),console.log(`[css] transpiled completed successfully in ${s.stats.duration}ms`),e()}))}))}e.build=async function(e){e?function(){console.log("[mak] building watching home-page"),t.transpileWatch(i,l);let e=0;o.watchFile("src/home-page/index.html",{persistent:!1},((n,t)=>{n.mtime!=t.mtime&&(e+=1,console.log(`[cpy] copy and reload index.html #${e}`),o.copyFileSync("src/home-page/index.html","dist/home/index.html"),r.admin({type:"content-update",parameter:{app:"www",name:"index.html"}}).catch((()=>{})))})),console.log("[mak] index.html fs watcher setup");let n=0;o.watchFile("src/home-page/index.sass",{persistent:!1},((e,o)=>{e.mtime!=o.mtime&&u().then((()=>{n+=1,console.log(`[mak] reload index.css #${n}`),r.admin({type:"content-update",parameter:{app:"www",name:"index.css"}}).catch((()=>{}))})).catch((()=>{}))})),console.log("[mak] index.sass fs watcher setup"),process.on("SIGINT",(()=>{o.unwatchFile("build/home-page/index.js"),o.unwatchFile("src/home-page/index.html"),o.unwatchFile("src/home-page/index.sass"),process.exit(0)}))}():async function(){if(console.log("[mak] building home-page"),t.transpileOnce(i,l)){await r.admin({type:"content-update",parameter:{app:"www",name:"index.js"}});try{await u(),await r.admin({type:"content-update",parameter:{app:"www",name:"index.css"}})}catch{return void console.log("[mak] build home-page failed at transpiling stylesheet")}console.log("[cpy] copy index.html"),o.copyFileSync("src/home-page/index.html","dist/home/index.html"),await r.admin({type:"content-update",parameter:{app:"www",name:"index.html"}}),console.log("[mak] build home-page completed succesfully")}else console.log("[mak] build home-page failed at transpiling script")}()}},".":(e,n)=>{const o=n("admin-base"),t=n("build-self"),s=n("build-server-core"),r=n("build-home-page");function i(e){if(["ak","collect","cost"].includes(e))return e;console.log("unknown app name"),process.exit(1)}const l=process.argv.slice(2);"self"==l[0]?t.build():"server-core"==l[0]?s.build(!1):"watch"==l[0]&&"server-core"==l[1]?s.build(!0):"home-page"==l[0]?r.build(!1):"watch"==l[0]&&"home-page"==l[1]?r.build(!0):l[0].endsWith("-client")||l[0].endsWith("-server")?i(l[0].slice(0,-7)):"watch"==l[0]&&l[1].endsWith("-client")||"watch"==l[0]&&l[1].endsWith("-server")?i(l[1].slice(0,-7)):"watch"==l[0]&&l[1]?(i(l[1]),i(l[1])):"update-content"==l[0]&&3==l.length?o.admin({type:"content-update",parameter:{app:l[1],name:l[2]}}).then((()=>process.exit(1))):"expire-device"==l[0]&&2==l.length||("shutdown"==l[0]?o.admin({type:"shutdown"}).then((()=>process.exit(1))):(console.log("unknown command"),process.exit(1)))}});
