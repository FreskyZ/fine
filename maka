#!/usr/bin/env node
(e=>{const t={};!function o(n){return n in t||(t[n]={},e[n](t[n],o)),t[n]}(".")})({common:(e,t)=>{const o=require("fs"),n=require("chalk"),s=require("dayjs");e.projectDirectory="<PROJECTDIR>",e.nodePackage=JSON.parse(o.readFileSync("package.json","utf-8")),e.compileTimeConfig=JSON.parse(o.readFileSync("maka.config","utf-8")),e.logInfo=function(e,t){console.log(n`[{blueBright ${s().format("HH:mm:ss.SSS")}} ${e}] ${t}`)},e.logError=function(e,t){console.log(n`[{blueBright ${s().format("HH:mm:ss.SSS")}} {red ${e}}] ${t}`)},process.on("unhandledRejection",(e=>{console.log("unhandled reject: ",e),process.exit(0)}))},"tools/admin":(e,t)=>{const o=require("net"),n=require("async-mutex"),s=t("common");const r=new n.Mutex;e.admin=async function(e){await r.runExclusive((async()=>await async function(e){const t=o.createConnection("/tmp/fps.socket").ref();return new Promise(((o,n)=>{const r=JSON.stringify(e);t.on("error",(e=>{"code"in e&&"ENOENT"==e.code?(s.logError("adm",`admin socket not open, command ${r} discarded`),o()):(s.logError("adm",`socket error: ${e.message}`),n())})),t.on("timeout",(()=>{s.logError("adm","socket timeout"),t.destroy(),n()})),t.once("data",(e=>{"ACK"==e.toString("utf-8")&&(s.logInfo("adm",`command ${r} acknowledged`),setTimeout((()=>{t.destroy(),o()}),0))})),t.write(r)}))}(e)))}},"tools/typescript":(e,t)=>{const o=require("typescript"),n=require("chalk"),s=t("common"),r={lib:["lib.es2020.d.ts"],outDir:"/vbuild",target:o.ScriptTarget.ES2020,module:o.ModuleKind.CommonJS,moduleResolution:o.ModuleResolutionKind.NodeJs,skipLibCheck:!0,noEmitOnError:!0,noImplicitAny:!0,noFallthroughCaseInSwitch:!0,noImplicitReturns:!0,noImplicitThis:!0,noUnusedLocals:!0,noUnusedParameters:!0,strictFunctionTypes:!0,strictBindCallApply:!0,removeComments:!0};function i(e){return{...r,sourceMap:e.sourceMap,esModuleInterop:e.importDefault,jsx:"jsx"in e?o.JsxEmit.ReactJSX:void 0,lib:"additionalLib"in e?[...r.lib,...e.additionalLib.map((e=>`lib.${e}.d.ts`))]:r.lib}}function a({category:e,code:t,messageText:r,file:i,start:a}){if(6031!=t)if(6032==t)s.logInfo("tsc","retranspile");else{if(6194==t)return;{const s=(0,{[o.DiagnosticCategory.Warning]:n.red,[o.DiagnosticCategory.Error]:n.red,[o.DiagnosticCategory.Suggestion]:n.green,[o.DiagnosticCategory.Message]:n.cyan}[e])(`  TS${t} `);let l="";if(i){const{line:e,character:t}=o.getLineAndCharacterOfPosition(i,a);l=n`{yellow ${i.fileName}:${e+1}:${t+1}} `}let c=o.flattenDiagnosticMessageText(r,"\n");c.includes("\n")&&(c="\n"+c),console.log(s+l+c)}}}function l(e){const t=o.sys.readFile;o.sys.readFile=(o,n)=>{let r;if(r=e.readFile?e.readFile(o,(e=>t(e,n))):t(o,n),!o.endsWith(".d.ts"))for(const e in s.compileTimeConfig)r=r.split(e).join(s.compileTimeConfig[e]);return r}}function c(e){return(t,o)=>{if(t.endsWith(".js")){o.startsWith('"use strict"')&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("Object.defineProperty")&&(o=o.slice(o.indexOf("\n")+1)),o.startsWith("exports.")&&(o=o.slice(o.indexOf("\n")+1));const e=/\/\/#\s*sourceMappingURL/.exec(o);e?o=o.slice(0,e.index):o.endsWith("\n")||(o+="\n")}const n=e.findIndex((e=>e.name==t));n>=0?e.splice(n,1,{name:t,content:o}):e.push({name:t,content:o})}}function m(e,t){s.logInfo("tsc",n`once {yellow ${e.entry}}`),l(t);const r=i(e),m=[],p=function(e){const t=e.diagnostics.filter((e=>e.category==o.DiagnosticCategory.Error||o.DiagnosticCategory.Warning)).length,r=e.diagnostics.length-t;let i;i=0==r&&0==t?"no diagnostic":0!=r&&0==t?n`{yellow ${r}} infos`:0==r?n`{yellow ${t}} errors`:n`{yellow ${t}} errors and {yellow ${r}} infos`,(e.emitSkipped?s.logError:s.logInfo)("tsc",`completed with ${i}`);for(const t of e.diagnostics)a(t);return!e.emitSkipped}(o.createProgram([e.entry],r,o.createCompilerHost(r)).emit(void 0,c(m)));t.afterEmit({success:p,files:m})}function p(e,t){s.logInfo("tsc",n`watch {yellow ${e.entry}}`),l(t);const r=[];o.createWatchProgram(o.createWatchCompilerHost([e.entry],i(e),o.sys,((...e)=>{const n=o.createEmitAndSemanticDiagnosticsBuilderProgram(...e),s=n.emit;return n.emit=(e,o,...n)=>{const i=s(e,c(r),...n);return i.emitSkipped||t.afterEmit({files:r}),i},n}),a,a))}e.transpile=function(e,t){(e.watch?p:m)(e,t)}},"tools/mypack":(e,t)=>{const o=require("path"),n=require("chalk"),s=require("crypto-js"),r=require("filesize"),i=require("source-map"),a=require("terser"),l=t("common");e.pack=async function(e){if(e.lastResult?l.logInfo("mpk","repack"):l.logInfo("mpk",n`pack {yellow ${e.entry}}`),!e.files.some((t=>t.name==e.entry)))return l.logError("mpk","invalid entry"),{success:!1};const t=o.dirname(e.entry),c=e.sourceMap?e.files.filter((e=>e.name.endsWith(".js"))).map((({name:t,content:o})=>({name:t,jsContent:o,mapContent:e.files.find((e=>e.name==t+".map")).content}))):e.files.map((({name:e,content:t})=>({name:e,jsContent:t,mapContent:null})));let m=null;e.sourceMap&&(m=new i.SourceMapGenerator({file:e.output}));let p=3;const d=[];let u="app"==e.type?"((modules) => { const mycache = {};\n(function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n":"module.exports = ((modules) => { const mycache = {};\nreturn (function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n";for(let{name:n,jsContent:r,mapContent:a}of c){let f=o.relative(t,n);f.endsWith(".js")&&(f=f.slice(0,-3)),f.endsWith("index")&&(f=f.slice(0,-5)),0==f.length&&(f=".");let y=r;for(;;){const e=/require\("(?<moduleName>\.[\.\w\-\/]*)"\);/,s=e.exec(y);if(!s)break;const r=o.join(o.dirname(n),s.groups.moduleName);let i=c.some((e=>e.name==r))?r:c.some((e=>e.name==r+".js"))?r+".js":c.some((e=>e.name==r+"/index.js"))?r+"/index.js":null;if(null===i)return l.logError("mpk",`${n}: invalid module name ${s.groups.moduleName} at ${s.index}`),{success:!1};i=o.relative(t,i),i=i.slice(0,-3),i.endsWith("index")&&(i=i.slice(0,-5)),0==i.length&&(i="."),y=y.replace(e,`__myrequire__("${i}");`)}if(u+=`'${f}': (exports, __myrequire__) => {\n${y}}, `,d.push({fileName:n,moduleName:f,contentLength:y.length,hash:s.SHA256(y).toString()}),e.sourceMap){let e=null;(await new i.SourceMapConsumer(JSON.parse(a))).eachMapping((t=>{null===e&&(e=t.generatedLine),m.addMapping({source:o.resolve(t.source),original:{line:t.originalLine,column:t.originalColumn},generated:{line:t.generatedLine-e+p+1,column:t.generatedColumn}})}))}p+=y.split("\n").length}u+="})\n";let f=m?.toString();if(e.minify){const t=await a.minify(u,{sourceMap:!!e.sourceMap&&{content:f,filename:e.output,url:e.output+".map"}});u=t.code,f="object"==typeof t.map?JSON.stringify(t.map):t.map}const y=s.SHA256(u).toString();if(y===e.lastResult?.hash)l.logInfo("mpk","completed with no change");else if(e.lastResult||e.output&&l.logInfo("mpk",n`asset {yellow ${e.output}}`),l.logInfo("mpk",n`asset size {gray ${r(u.length)}} compression rate {gray ${(u.length/c.reduce(((e,t)=>e+t.jsContent.length),0)*100).toFixed(2)}%}`),e.printModules)if(e.lastResult){for(const t of d.filter((t=>!e.lastResult.modules.some((e=>e.fileName==t.fileName)))))console.log(n`  {gray +} ${t.fileName} {cyan ${t.moduleName}} {gray size ${r(t.contentLength)}}`);for(const[t]of d.map((t=>[t,e.lastResult.modules.find((e=>e.fileName==t.fileName))])).filter((([e,t])=>t&&e.hash!=t.hash)))console.log(n`  {gray *} ${t.fileName} {cyan ${t.moduleName}} {gray size ${r(t.contentLength)}}`);for(const t of e.lastResult.modules.filter((e=>!d.some((t=>t.fileName==e.fileName)))))console.log(n`  {gray - removed ${t.fileName}} {cyan ${t.moduleName}}`)}else for(const{fileName:e,moduleName:t,contentLength:o}of d)console.log(n`   {gray +} ${e} {cyan ${t}} {gray size ${r(o)}}`);return{success:!0,jsContent:u,mapContent:f,hash:y,modules:d}}},"targets/self":(e,t)=>{const o=require("fs"),n=require("chalk"),s=t("common"),r=t("tools/typescript"),i=t("tools/mypack"),a={entry:"script/index.ts"},l={type:"app",entry:"/vbuild/index.js",files:[],output:"maka",minify:!0};e.build=function(){s.logInfo("mka",n`{yellow self}`),r.transpile(a,{afterEmit:async({success:e,files:t})=>{e||(s.logError("mka",n`{yellow self} failed at transpile`),process.exit(1));const r=await i.pack({...l,files:t});r.success||(s.logError("mka",n`{yellow self} failed at pack`),process.exit(1)),o.writeFileSync("maka","#!/usr/bin/env node\n"+r.jsContent),s.logInfo("mka","self completed successfully")}})}},"targets/public":(e,t)=>{const o=require("fs-extra"),n=require("rimraf"),s=t("common");e.build=function(){s.logInfo("mka","copy public"),o.copySync("src/public","dist/public",{overwrite:!0}),s.logInfo("mka","copy public completed")},e.cleanAll=function(){s.logInfo("mka","clean all"),n("dist",(e=>{e?s.logError("mka","clean failed: "+e.message):s.logInfo("mka","clean all completed")}))}},"targets/server-core":(e,t)=>{const o=require("child_process"),n=require("fs"),s=require("chalk"),r=t("common"),i=t("tools/admin"),a=t("tools/typescript"),l=t("tools/mypack"),c={entry:"src/server-core/index.ts",sourceMap:!0},m={type:"app",entry:"/vbuild/server-core/index.js",files:[],sourceMap:!0,output:"dist/main/server.js",printModules:!0,minify:!0};function p(){r.logInfo("mka",s`{yellow server-core}`),a.transpile(c,{afterEmit:async({success:e,files:t})=>{e||(r.logError("mka",s`{yellow server-core} failed at transpile typescript`),process.exit(1));const o=await l.pack({...m,files:t});o.success||(r.logError("mka",s`{yellow server-core} failed at pack`),process.exit(1)),await n.promises.mkdir("dist/main",{recursive:!0}),await Promise.all([n.promises.writeFile("dist/main/server.js",o.jsContent),n.promises.writeFile("dist/main/server.js.map",o.mapContent)]),r.logInfo("mka","server-core completed successfully")}})}let d=null;function u(){function e(){r.logInfo("mds","start server"),d=o.spawn("node",["dist/main/server.js"]),d.stdout.pipe(process.stdout),d.stderr.pipe(process.stderr),d.on("error",(e=>{r.logError("mds",`server process error ${e.message}`)})),d.on("exit",(e=>{(0==e?r.logInfo:r.logError)("mds",`server process exited with code ${e}`),d=null}))}null!=d?(d.once("exit",e),i.admin({type:"shutdown"})):e()}function f(){r.logInfo("mka",s`watch {yellow server-core}`),process.on("exit",(()=>d?.kill()));let e=null;a.transpile({...c,watch:!0},{afterEmit:async({files:t})=>{const o=await l.pack({...m,files:t,lastResult:e});o.success&&(await n.promises.mkdir("dist/main",{recursive:!0}),await Promise.all([n.promises.writeFile("dist/main/server.js",o.jsContent),n.promises.writeFile("dist/main/server.js.map",o.mapContent)]),o.hash!=e?.hash&&u(),e=o)}})}e.startOrRestartServer=u,e.build=function(e){(e?f:p)()}},"tools/sass":(e,t)=>{const o=require("chalk"),n=require("node-sass"),s=t("common");e.transpile=async function(e){return s.logInfo("css",o`{yellow ${e.file}}`),new Promise((t=>{n.render(e,((o,n)=>{o?(s.logError("css",`error at ${e.file}:${o.line}:${o.column}: ${o.message}`),t({success:!1})):(s.logInfo("css",`completed in ${n.stats.duration}ms`),t({success:!0,style:n.css.toString("utf-8")}))}))}))}},"targets/web-page":(e,t)=>{const o=require("fs"),n=require("chalk"),s=t("common"),r=t("tools/admin"),i=t("tools/typescript"),a=t("tools/sass"),l=(e,t)=>({entry:`src/pages/${e}.ts`,additionalLib:["dom"],watch:t}),c=e=>({file:`src/pages/${e}.sass`,outputStyle:"compressed"});async function m(e){s.logInfo("mka",n`{yellow ${e}-page}`),await o.promises.mkdir("dist/main",{recursive:!0});const t=l(e,!1);if(o.existsSync(t.entry)){const r=(await new Promise((o=>i.transpile(t,{afterEmit:({success:t,files:r})=>{t||(s.logError("mka",n`{yellow ${e}-page} failed at transpile typescript`),process.exit(1)),o(r)}}))))[0].content;await o.promises.writeFile(`dist/main/${e}.js`,r)}const m=c(e);if(o.existsSync(m.file)){const{success:t,style:r}=await a.transpile(m);t||(s.logError("mka",n`{yellow ${e}-page} failed at transpile stylesheet`),process.exit(1)),await o.promises.writeFile(`dist/main/${e}.css`,r)}s.logInfo("htm",n`copy {yellow ${e}.html}`),await o.promises.copyFile(`src/pages/${e}.html`,`dist/main/${e}.html`),s.logInfo("htm","copy completed"),await r.admin({type:"reload-static",key:e}),s.logInfo("mka",`build ${e}-page completed succesfully`)}async function p(e){s.logInfo("mka",n`watch {yellow ${e}-page}`),await o.promises.mkdir("dist/main",{recursive:!0});const t=l(e,!0);o.existsSync(t.entry)&&i.transpile(t,{afterEmit:async({files:t})=>{const n=t[0].content;await o.promises.writeFile(`dist/main/${e}.js`,n),r.admin({type:"reload-static",key:e}).catch((()=>{}))}});const m=c(e);o.existsSync(m.file)&&o.watchFile(m.file,{persistent:!1},(async(t,n)=>{if(t.mtime==n.mtime)return;const{success:s,style:i}=await a.transpile(c(e));s&&(o.writeFileSync(`dist/main/${e}.css`,i),r.admin({type:"reload-static",key:e}).catch((()=>{})))})),o.watchFile(`src/pages/${e}.html`,{persistent:!1},((t,i)=>{t.mtime!=i.mtime&&(s.logInfo("htm",n`copy {yellow ${e}.html}`),o.copyFileSync(`src/pages/${e}.html`,`dist/main/${e}.html`),s.logInfo("htm","copy completed"),r.admin({type:"reload-static",key:e}).catch((()=>{})))})),process.on("SIGINT",(()=>{o.unwatchFile(`src/pages/${e}.html`),o.existsSync(m.file)&&o.unwatchFile(m.file),process.exit(0)})),s.logInfo("mka","tsc watch and fs watch setup")}e.build=function(e,t){return(t?p:m)(e)}},"tools/codegen":(e,t)=>{const o=require("fs/promises"),n=require("chalk"),s=require("xml2json"),r=t("common"),i=["GET","POST","PUT","PATCH","DELETE"],a={GET:"get",POST:"post",PUT:"put",PATCH:"patch",DELETE:"del"},l=["id","number","string","boolean","date","time"],c={id:{pattern:"\\d+",validator:"validateId",tsType:"number"},number:{pattern:"\\d+",validator:"validateNumber",tsType:"number"},string:{pattern:".+",validator:"validateString",tsType:"string"},boolean:{pattern:"(true|false)",validator:"validateBoolean",tsType:"boolean"},date:{pattern:"\\d{6}",validator:"validateDate",tsType:"Dayjs"},time:{pattern:"\\d{12}",validator:"validateTime",tsType:"Dayjs"}};async function m(e){const t=await o.readFile(`src/${e}/api.xml`,"utf-8"),{version:n,api:r}=s.toJson(t,{object:!0})[`${e}-api`];return{version:n,definitions:r.map(((e,t)=>{const o=e.name;if(!o)throw new Error(`index ${t} api name is required`);const n=e.method;if(!i.includes(n))throw new Error(`api ${o} invalid method`);const s=e.path;if(!s)throw new Error(`api ${o} path is required`);if(!s.startsWith("/"))throw new Error(`api ${o} path should be absolute`);const r=function(e,t){const o=[];for(;;){const n=/\{(?<parameterName>[\w\_]+):(?<parameterType>\w+)\}/.exec(t);if(!n)break;if(10==o.filter((e=>"parameter"==e.type)).length)throw new Error(`api ${e} too many parameters`);const[s,r]=[n.groups.parameterName,n.groups.parameterType];if(!l.includes(r))throw new Error(`api ${e} parameter ${s} invalid type ${r}`);0!=n.index&&o.push({type:"normal",value:t.slice(0,n.index)}),o.push({type:"parameter",parameterName:s,parameterType:r}),t=t.slice(n.index+s.length+r.length+3)}return t.length&&o.push({type:"normal",value:t}),o}(o,s),[a,c]=[e["body-type"],e["body-name"]];if(["POST","PUT","PATCH"].includes(n)&&(!a||!c))throw new Error(`api ${o} body is required for ${n}`);return{namespace:e.namespace||"default",apiName:o,method:n,apiPath:r,bodyType:a,bodyName:c,returnType:e["return-type"]||"void"}}))}}e.generate=async function(e,t){return"server"==t?await async function(e){const t=`src/${e}/server/index.ts`;let s;r.logInfo("fcg",n`generate {yellow ${t}}`);try{s=await m(e)}catch(e){return r.logError("fcg",e.message),!1}const{version:i,definitions:a}=s;let p="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==a.length)return p+="// empty\n",await o.writeFile(t,p),r.logInfo("fcg","generate completed with empty"),!0;p+=`import { WebContext, ${l.filter((e=>a.some((t=>t.apiPath.some((t=>"parameter"==t.type&&t.parameterType==e)))))).map((e=>c[e].validator)).concat(a.some((e=>["PUT","POST","PATCH"].includes(e.method)))?["validateBody"]:[]).join(", ")} } from '../../shared/api-server';\n`,p+="import { MyError } from '../../shared/error';\n";for(const e of a.map((e=>e.namespace)).filter(((e,t,o)=>o.indexOf(e)==t)))p+=`import { ${a.filter((t=>t.namespace==e)).map((e=>e.apiName)).join(", ")} } from './${e}';\n`;p+="\n",p+="export async function dispatch(ctx: WebContext) {\n",p+="    let match: RegExpExecArray;\n",p+=`    if (!ctx.path.startsWith('/${e}/v${i}')) { throw new MyError('not-found', 'invalid invocation version'); }\n`,p+=`    const methodPath = \`\${ctx.method} \${ctx.path.slice(${e.length+i.length+3})}\`;\n`,p+="\n";for(const e of a){const{apiName:t,method:o,apiPath:n,bodyType:s,returnType:r}=e;p+=`    match = /^${o} `;for(const e of n)"normal"==e.type?p+=e.value.split("/").join("\\/"):p+=`(?<${e.parameterName}>${c[e.parameterType].pattern})`;p+="$/.exec(methodPath); if (match) {\n",p+="        ",r&&"void"!=r&&(p+="ctx.body = "),p+=`await ${t}(ctx.state`;for(const{parameterName:e,parameterType:t}of n.filter((e=>"parameter"==e.type)))p+=`, ${c[t].validator}('${e}', match.groups['${e}'])`;s&&(p+=", validateBody(ctx.request.body)"),p+=");\n","POST"==o?p+="        ctx.status = 201;\n":"DELETE"==o&&(p+="        ctx.status = 204;\n"),p+="        return;\n",p+="    }\n"}return p+="\n",p+="    throw new MyError('not-found', 'invalid invocation');\n",p+="}\n",await o.writeFile(t,p),r.logInfo("fcg","generate completed"),!0}(e):await async function(e){const t=`src/${e}/client/api.ts`;let s;r.logInfo("fcg",n`generate {yellow ${t}}`);try{s=await m(e)}catch(e){return r.logError("fcg",e.message),!1}const{version:l,definitions:p}=s;let d="// ATTENTION:\n// This code was generated by a tool.\n// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n\n";if(0==p.length)return d+="// empty\n",await o.writeFile(t,d),r.logInfo("fcg","generate completed with empty"),!0;p.some((e=>e.apiPath.some((e=>"parameter"==e.type&&["date","time"].includes(e.parameterType)))))&&(d+="import type { Dayjs } from 'dayjs';\n"),d+=`import { ${i.filter((e=>p.some((t=>t.method==e)))).map((e=>a[e])).join(", ")} } from '../../shared/api-client';\n`,d+=`import type { ${p.filter((e=>!!e.bodyType)).map((e=>e.bodyType)).filter(((e,t,o)=>o.indexOf(e)==t)).join(",")} } from '../api';\n`,d+="\n";for(const t of p){const{apiName:o,method:n,apiPath:s,bodyType:r,bodyName:i,returnType:m}=t;d+=`export const ${o} = (`;for(const{parameterName:e,parameterType:t}of s.filter((e=>"parameter"==e.type)))d.endsWith("(")||(d+=", "),d+=`${e}: ${c[t].tsType}`;r&&(d.endsWith("(")||(d+=", "),d+=`${i}: ${r}`),d+=`): Promise<${m}> => ${a[n]}(\`/${e}/v${l}`;for(const e of s)"normal"==e.type?d+=e.value:"date"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDD')}`:"time"==e.parameterType?d+=`\${${e.parameterName}.format('YYYYMMDDHHmmdd')}`:d+=`\${${e.parameterName}}`;d+="`",r&&(d+=`, ${i}`),d+=");\n"}return await o.writeFile(t,d),r.logInfo("fcg","generate completed"),!0}(e)}},"targets/app-server":(e,t)=>{const o=require("fs"),n=require("chalk"),s=t("common"),r=t("tools/admin"),i=t("tools/codegen"),a=t("tools/typescript"),l=t("tools/mypack"),c=(e,t)=>({entry:`src/${e}/server/index.ts`,sourceMap:!0,watch:t}),m=(e,t,o)=>({type:"lib",entry:`/vbuild/${e}/server/index.js`,files:t,sourceMap:!0,output:`dist/${e}/server.js`,printModules:!0,minify:!0,lastResult:o});e.build=async function(e,t){t?function(e){s.logInfo("mka",n`watch {yellow ${e}-server}`),o.mkdirSync(`dist/${e}`,{recursive:!0}),o.watchFile(`src/${e}/api.xml`,{persistent:!1},((t,o)=>{t.mtime!=o.mtime&&i.generate(e,"server")})),process.on("SIGINT",(()=>{o.unwatchFile(`src/${e}/api.xml`),process.exit(0)}));let t=null;a.transpile(c(e,!0),{afterEmit:async({files:n})=>{const s=await l.pack(m(e,n,t));s.success&&(await Promise.all([o.promises.writeFile(`dist/${e}/server.js`,s.jsContent),o.promises.writeFile(`dist/${e}/server.js.map`,s.mapContent)]),s.hash!=t?.hash&&await r.admin({type:"reload-server",app:e}),t=s)}}),i.generate(e,"server")}(e):await async function(e){s.logInfo("mka",n`{yellow ${e}-server}`),await o.promises.mkdir(`dist/${e}`,{recursive:!0}),await i.generate(e,"server")||(s.logError("mka",n`{yellow ${e}-server} failed at code generation`),process.exit(1)),a.transpile(c(e,!1),{afterEmit:async({success:t,files:i})=>{t||(s.logError("mka",n`{yellow ${e}-server} failed at transpile typescript`),process.exit(1));const a=await l.pack(m(e,i));a.success||(s.logError("mka",n`{yellow ${e}-server} failed at pack`),process.exit(1)),await Promise.all([o.promises.writeFile(`dist/${e}/server.js`,a.jsContent),o.promises.writeFile(`dist/${e}/server.js.map`,a.mapContent)]),await r.admin({type:"reload-server",app:e}),s.logInfo("mka",`${e}-server completed successfully`)}})}(e)}},"tools/webpack":(e,t)=>{const o=require("chalk"),n=require("filesize"),s=require("webpack"),r=t("common");function i(e,t){r.logInfo("wpb",o`{yellow ${e.assets.length}} asset in {yellow ${e.time}ms}, hash {yellow ${e.hash}}`);for(const t of e.errors)console.log(t);for(const t of e.warnings)console.log(t.message??t);const s=e.chunks.reduce(((e,t)=>(e.push(...t.modules),e)),[]);if(null==t){for(let t=0;t<e.assets.length;++t){const s=e.assets[t];console.log(o`  {gray asset#}${t} {yellow ${s.name}}`+o` {gray size} {yellow ${n(s.size)}} {gray chunks} [${s.chunks.join(", ")}]`)}for(const t of e.chunks){console.log(o`  {gray chunk#}${t.id} {yellow ${t.names.join(",")}} {gray size} {yellow ${n(t.size)}}`);const e=[];for(let s=0;s<t.modules.length;++s){const r=t.modules[s];r.name.startsWith("external")?e.push(r.name.slice(10,-1)):console.log(o`    {gray #${s}} ${r.name} {gray size ${n(r.size)}}`)}for(let t=0;t<Math.ceil(e.length/5);++t)0==t?console.log(o`    {gray +} ${e.length} {gray external modules} ${e.filter(((e,t)=>0==Math.floor(t/5))).join(", ")}`):console.log(o`                        + ${e.filter(((e,o)=>Math.floor(o/5)==t)).join(", ")}`)}}else{const r=t.chunks.reduce(((e,t)=>(e.push(...t.modules),e)),[]),i=s.filter((e=>!r.some((t=>t.name===e.name)))),a=r.filter((e=>!s.some((t=>t.name===e.name))));for(let t=0;t<e.assets.length;++t){const s=e.assets[t];console.log(o`  {gray asset#}${t} {yellow ${s.name}}`+o` {gray size} {yellow ${n(s.size)}} {gray chunks} [${s.chunks.join(", ")}]`+(t==e.assets.length-1&&0==i.length&&0==a.length?o`{gray [no module list change]}`:""))}for(const e of i)console.log(o`  + ${e.name} {gray size ${n(e.size)}}`);for(const e of a)console.log(o`  - {gray removed ${e.name}}`)}return s}e.bundleOnce=async function(e,t,n){r.logInfo("wpb",o`once {yellow ${e.entry}}`);const a=!("printStat"in e)||e.printStat;delete e.printStat,s(e).run(((e,o)=>{if(e)return r.logError("wpb","critical error: "+e.message),void t(null);const s=o?.toJson();a?i(s,null):r.logInfo("wpb","completed with no error"),n(s)}))},e.bundleWatch=async function(e,t){r.logInfo("wpb",o`watch {yellow ${e.entry}}`);let n=null;s({...e,watch:!0},((e,o)=>{if(e)return void r.logError("wpb","critical error: "+e.message);const s=o?.toJson();if(s.hash==n.hash)return n=s,void r.logInfo("wpb","completed with no change");i(s,n),n=s,t(s)}))}},"targets/app-client":(e,t)=>{const o=require("fs"),n=require("path"),s=require("chalk"),r=t("tools/admin"),i=t("common"),a=t("tools/typescript"),l=t("tools/webpack"),c=require("webpack-bundle-analyzer"),m=require("antd-dayjs-webpack-plugin"),p=require("terser-webpack-plugin");async function d(e){i.logInfo("mka",s`{yellow ${e}-client}`),await o.promises.mkdir(`dist/${e}`,{recursive:!0}),i.logInfo("htm",s`copy {yellow src/${e}/index.html}`),await o.promises.copyFile(`src/${e}/index.html`,`dist/${e}/index.html`),i.logInfo("htm","copy completed"),a.transpile((e=>({entry:`src/${e}/client/index.tsx`,sourceMap:!0,additionalLib:["dom"],jsx:!0,importDefault:!0}))(e),{afterEmit:async({success:t,files:a})=>{t||(i.logError("mka",s`{yellow ${e}-client} failed at transpile typescript`),process.exit(1)),await o.promises.writeFile(`build/${e}-client/index.js`,a.find((e=>"/vbuild/index.js"==e.name)).content),await o.promises.writeFile(`build/${e}-client/index.js.map`,a.find((e=>"/vbuild/index.js.map"==e.name)).content),l.bundleOnce((e=>({mode:"production",entry:n.join(i.projectDirectory,`build/${e}-client/index.js`),output:{filename:"client.js",path:n.join(i.projectDirectory,`dist/${e}`)},devtool:"source-map",optimization:{splitChunks:{cacheGroups:{antd:{test:/node_modules\/(antd|rc)/,priority:20,chunks:"all",filename:"client-ant.js"},antdIcon:{test:/node_modules\/\@ant-design/,priority:20,chunks:"all",filename:"client-anticon.js"},reactDom:{test:/node_modules\/react-dom/,priority:20,chunks:"all",filename:"client-react-dom.js"},vender:{test:/node_modules/,priority:10,chunks:"all",filename:"client-other.js"}}},minimizer:[new p({terserOptions:{format:{comments:!1}},extractComments:!1})]},plugins:[new c.BundleAnalyzerPlugin({analyzerMode:"static",openAnalyzer:!1,reportFilename:"stat.html"}),new m]}))(e),(()=>{i.logError("mka",s`{yellow ${e}-client} failed at bundle`),process.exit(1)}),(async()=>{await r.admin({type:"reload-static",key:e}),i.logInfo("mka",`${e}-client completed successfully`)}))}})}e.build=async function(e,t){t||await d(e)}},".":(e,t)=>{const o=t("tools/admin"),n=t("targets/self"),s=t("targets/public"),r=t("targets/server-core"),i=t("targets/web-page"),a=t("targets/app-server"),l=t("targets/app-client");function c(e){if(["home","user","404","418"].includes(e))return e;console.log("unknown page name"),process.exit(1)}function m(e){if(["cost","collect","ak"].includes(e))return e;console.log("unknown app name"),process.exit(1)}const[p,d]=[process.argv[2],process.argv[3]];"self"==p?n.build():"clean"==p?s.cleanAll():"public"==p?s.build():"server-core"==p?r.build(!1):"watch"==p&&"server-core"==d?r.build(!0):p.endsWith("-page")?i.build(c(p.slice(0,-5)),!1):"watch"==p&&d.endsWith("-page")?i.build(c(d.slice(0,-5)),!0):p.endsWith("-client")?l.build(m(p.slice(0,-7)),!1):"watch"==p&&d.endsWith("-client")?l.build(m(d.slice(0,-7)),!0):p.endsWith("-server")?a.build(m(p.slice(0,-7)),!1):"watch"==p&&d.endsWith("-server")?a.build(m(d.slice(0,-7)),!0):"watch"==p&&d.endsWith("-both")?(l.build(m(d.slice(0,-5)),!0),a.build(m(d.slice(0,-5)),!0)):"all"==p?(s.build(),r.build(!1),i.build("www",!1),i.build("user",!1),i.build("404",!1),i.build("418",!1),a.build("cost",!1),l.build("ak",!1)):"shutdown"==p?o.admin({type:"shutdown"}).then((()=>process.exit(1))):"reload-static"==p?o.admin({type:"reload-static",key:"home"==d||"user"==d?d:m(d)}).then((()=>process.exit(1))):"source-map"==p?o.admin({type:"source-map",enabled:"enable"==d}).then((()=>process.exit(1))):"reload-server"==p?o.admin({type:"reload-server",app:m(d)}).then((()=>process.exit(1))):"expire-device"==p?o.admin({type:"expire-device",deviceId:parseInt(d)}).then((()=>process.exit(1))):(console.log("unknown command"),process.exit(1))}});