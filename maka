#!/usr/bin/env node
(e=>{const n={};!function t(o){return o in n||(n[o]={},e[o](n[o],t)),n[o]}(".")})({common:(e,n)=>{const t=require("fs"),o=require("chalk"),s=require("dayjs");e.projectDirectory="<PROJECTDIR>",e.nodePackage=JSON.parse(t.readFileSync("package.json","utf-8")),e.logInfo=function(e,n){console.log(o`[${s().format("HH:mm:ss")}][{cyan ${e}}] ${n}`)},e.logError=function(e,n){console.log(o`[${s().format("HH:mm:ss")}][{red ${e}}] ${n}`)},process.on("unhandledRejection",(e=>{console.log("unhandled reject: ",e),process.exit(0)}))},"admin-base":(e,n)=>{const t=require("net"),o=require("async-mutex"),s=n("common");const i=new o.Mutex;e.admin=async function(e){await i.runExclusive((async()=>await async function(e){const n=t.createConnection("/tmp/fps.socket").ref();return new Promise(((t,o)=>{const i=JSON.stringify(e);n.on("error",(e=>{"code"in e&&"ENOENT"==e.code?(s.logError("adm",`admin socket not open, command ${i} discarded`),t()):(s.logError("adm",`socket error: ${e.message}`),o())})),n.on("timeout",(()=>{s.logError("adm","socket timeout"),n.destroy(),o()})),n.once("data",(e=>{"ACK"==e.toString("utf-8")&&(s.logInfo("adm",`command ${i} acknowledged`),setTimeout((()=>{n.destroy(),t()}),0))})),n.write(i)}))}(e)))}},"run-typescript":(e,n)=>{const t=require("typescript"),o=require("chalk"),s=n("common");e.ModuleKind=t.ModuleKind,e.ModuleResolutionKind=t.ModuleResolutionKind;const i={lib:["lib.es2020.d.ts"],target:t.ScriptTarget.ES2020,module:t.ModuleKind.CommonJS,moduleResolution:t.ModuleResolutionKind.NodeJs,noEmitOnError:!0,noImplicitAny:!0,noFallthroughCaseInSwitch:!0,noImplicitReturns:!0,noImplicitThis:!0,noUnusedLocals:!0,noUnusedParameters:!0,strictFunctionTypes:!0,strictBindCallApply:!0,removeComments:!0},r={[t.DiagnosticCategory.Warning]:o.red,[t.DiagnosticCategory.Error]:o.red,[t.DiagnosticCategory.Suggestion]:o.green,[t.DiagnosticCategory.Message]:o.cyan};function a({category:e,code:n,messageText:i,file:a,start:l}){if(6031!=n)if(6032==n)s.logInfo("tsc","retranspile");else{if(6194==n)return;{const s=r[e](`  TS${n} `);let c="";if(a){const{line:e,character:n}=t.getLineAndCharacterOfPosition(a,l);c=o`{yellow ${a.fileName}:${e+1}:${n+1}} `}let m=t.flattenDiagnosticMessageText(i,"\n");m.includes("\n")&&(m="\n"+m),console.log(s+c+m)}}}e.transpileOnce=function(e,n){s.logInfo("tsc",o`once {yellow ${e}}`);const r={...i,...n,lib:"lib"in n?[...i.lib,...n.lib]:i.lib},l=function(e){const n=t.createCompilerHost(e);if(e.readFileHook){const t=n.readFile;n.readFile=n=>e.readFileHook(n,t)}const o=n.writeFile;return n.writeFile=(n,t,s,i,r)=>{n.endsWith(".js")&&((t=t.slice(t.indexOf("\n",t.indexOf("\n")+1)+1)).startsWith("exports.")&&(t=t.slice(t.indexOf("\n")+1)),e.sourceMap?t=t.slice(0,t.lastIndexOf("\n")+1):t.endsWith("\n")||(t+="\n")),e.writeFileHook?e.writeFileHook(n,t,s,i,r,o):o(n,t,s,i,r)},n}(r),c=t.createProgram(Array.isArray(e)?e:[e],r,l),{diagnostics:m}=c.emit(),{success:d,message:u}=function(e){const n=e.filter((e=>e.category==t.DiagnosticCategory.Error||t.DiagnosticCategory.Warning)).length,s=e.length-n;let i;return i=0==s&&0==n?"no diagnostic":0!=s&&0==n?o`{yellow ${s}} infos`:0==s?o`{yellow ${n}} errors`:o`{yellow ${n}} errors and {yellow ${s}} infos`,{success:0==n,message:i}}(m);return d?s.logInfo("tsc",`completed with ${u}`):s.logError("tsc",`completed with ${u}`),m.map(a),m.length>0&&s.logError("tsc","end of transpile diagnostics"),d},e.transpileWatch=function(e,n){if(s.logInfo("tsc",o`watch {yellow ${e}}`),n.watchReadFileHook){const e=t.sys.readFile;t.sys.readFile=(t,o)=>n.watchReadFileHook(t,o,e)}const r=t.sys.writeFile;t.sys.writeFile=(e,t,o)=>{e.endsWith(".js")&&((t=t.slice(t.indexOf("\n",t.indexOf("\n")+1)+1)).startsWith("exports.")&&(t=t.slice(t.indexOf("\n")+1)),n.sourceMap?t=t.slice(0,t.lastIndexOf("\n")+1):t.endsWith("\n")||(t+="\n")),n.watchWriteFileHook?n.watchWriteFileHook(e,t,o,r):r(e,t,o)},t.createWatchProgram(t.createWatchCompilerHost([e],{...i,...n},t.sys,((...e)=>{const o=t.createEmitAndSemanticDiagnosticsBuilderProgram(...e);if(n.watchEmit){const e=o.emit;o.emit=(...t)=>{const o=e(...t);return o.emitSkipped||n.watchEmit(),o}}return o}),a,a))}},"run-mypack":(e,n)=>{const t=require("path"),o=require("chalk"),s=require("crypto-js"),i=require("filesize"),r=require("source-map"),a=require("terser"),l=n("common");e.pack=async function(e){if(e.lastResult?l.logInfo("mpk","repack"):l.logInfo("mpk",o`pack {yellow ${e.entry}}`),!e.files.some((n=>n.name==e.entry)))return l.logError("mpk","invalid entry"),{success:!1};const n=t.dirname(e.entry),c=e.sourceMap?e.files.filter((e=>e.name.endsWith(".js"))).map((({name:n,content:t})=>({name:n,jsContent:t,mapContent:e.files.find((e=>e.name==n+".map")).content}))):e.files.map((({name:e,content:n})=>({name:e,jsContent:n,mapContent:null})));let m=null;e.sourceMap&&(m=new r.SourceMapGenerator({file:e.output}));let d=3;const u=[];let p="((modules) => { const mycache = {};\n(function myrequire(modulename) { if (!(modulename in mycache)) { mycache[modulename] = {}; modules[modulename](mycache[modulename], myrequire); } return mycache[modulename]; })('.'); })({\n";for(let{name:o,jsContent:i,mapContent:a}of c){let g=t.relative(n,o);g.endsWith(".js")&&(g=g.slice(0,-3)),g.endsWith("index")&&(g=g.slice(0,-5)),0==g.length&&(g=".");let f=i;for(;;){const e=/require\("(?<moduleName>\.[\.\w\-\/]*)"\);/,s=e.exec(f);if(!s)break;const i=t.join(t.dirname(o),s.groups.moduleName);let r=c.some((e=>e.name==i))?i:c.some((e=>e.name==i+".js"))?i+".js":c.some((e=>e.name==i+"/index.js"))?i+"/index.js":null;if(null===r)return l.logError("mpk",`invalid module name ${s.groups.moduleName} at ${s.index}`),{success:!1};r=t.relative(n,r),r=r.slice(0,-3),r.endsWith("index")&&(r=r.slice(0,-5)),0==r.length&&(r="."),f=f.replace(e,`__myrequire__("${r}");`)}if(p+=`'${g}': (exports, __myrequire__) => {\n${f}}, `,u.push({fileName:o,moduleName:g,contentLength:f.length,hash:s.SHA256(f).toString()}),e.sourceMap){let e=null;(await new r.SourceMapConsumer(JSON.parse(a))).eachMapping((n=>{null===e&&(e=n.generatedLine),m.addMapping({source:t.resolve(n.source),original:{line:n.originalLine,column:n.originalColumn},generated:{line:n.generatedLine-e+d+1,column:n.generatedColumn}})}))}d+=f.split("\n").length}if(p+="})\n",e.minify){p=(await a.minify(p)).code}const g=s.SHA256(p).toString();if(g===e.lastResult?.hash)l.logInfo("mpk","completed with no change");else if(e.lastResult||(l.logInfo("mpk","completed with no error"),e.output&&l.logInfo("mpk",o`asset {yellow ${e.output}}`),l.logInfo("mpk",o`asset size {gray ${i(p.length)}} compression rate {gray ${(p.length/c.reduce(((e,n)=>e+n.jsContent.length),0)*100).toFixed(2)}%}`)),e.printModules)if(e.lastResult){for(const n of u.filter((n=>!e.lastResult.modules.some((e=>e.fileName==n.fileName)))))console.log(o`  {gray +} ${n.fileName} {cyan ${n.moduleName}} {gray size ${i(n.contentLength)}}`);for(const[n]of u.map((n=>[n,e.lastResult.modules.find((e=>e.fileName==n.fileName))])).filter((([e,n])=>n&&e.hash!=n.hash)))console.log(o`  {gray *} ${n.fileName} {cyan ${n.moduleName}} {gray size ${i(n.contentLength)}}`);for(const n of e.lastResult.modules.filter((e=>!u.some((n=>n.fileName==e.fileName)))))console.log(o`  {gray - removed ${n.fileName}} {cyan ${n.moduleName}}`)}else for(const{fileName:e,moduleName:n,contentLength:t}of u)console.log(o`   {gray +} ${e} {cyan ${n}} {gray size ${i(t)}}`);return{success:!0,jsContent:p,mapContent:m?.toString(),hash:g,modules:u}}},"build-self":(e,n)=>{const t=require("fs"),o=require("chalk"),s=n("common"),i=n("run-typescript"),r=n("run-mypack"),a=["script/index.ts"],l={types:["node"],outDir:"/vbuild"};function c(e){return(n,t)=>{e.push({name:n,content:t})}}const m={entry:"/vbuild/index.js",files:[],output:"maka",minify:!0};e.build=async function(){s.logInfo("mka",o`{yellow self}`);const e=[];i.transpileOnce(a,{...l,writeFileHook:c(e)})||(s.logError("mka","self failed at transpile typescript"),process.exit(1));const n=await r.pack({...m,files:e});n.success||(s.logError("mka","self failed at pack"),process.exit(1)),t.writeFileSync("maka","#!/usr/bin/env node\n"+n.jsContent),s.logInfo("mka","self completed successfully")}},"build-server-core":(e,n)=>{const t=require("child_process"),o=require("fs/promises"),s=require("chalk"),i=n("common"),r=n("admin-base"),a=n("run-typescript"),l=n("run-mypack"),c="src/server-core/index.ts",m={sourceMap:!0,outDir:"/vbuild"},d={entry:"/vbuild/server-core/index.js",files:[],sourceMap:!0,output:"dist/home/server.js",printModules:!0,minify:!1};let u=null;function p(){function e(){i.logInfo("mds","start server"),u=t.spawn("node",["dist/home/server.js"]),u.stdout.pipe(process.stdout),u.stderr.pipe(process.stderr),u.on("error",(e=>{i.logError("mds",`server process error ${e.message}`)})),u.on("exit",(e=>{(0==e?i.logInfo:i.logError)("mds",`server process exited with code ${e}`),u=null}))}null!=u?(u.once("exit",e),r.admin({type:"shutdown"})):e()}e.startOrRestartServer=p,e.build=async function(e){e?function(){i.logInfo("mka",s`watch {yellow server-core}`),process.on("exit",(()=>u?.kill()));const e=[];let n=null;a.transpileWatch(c,{...m,watchWriteFileHook:(n,t)=>{const o=e.findIndex((e=>e.name==n));o>=0?e.splice(o,1,{name:n,content:t}):e.push({name:n,content:t})},watchEmit:async()=>{const t=await l.pack({...d,files:e,lastResult:n});t.success&&(await o.writeFile("dist/home/server.js",t.jsContent),await o.writeFile("dist/home/server.js.map",t.mapContent)),t.hash!=n?.hash&&p(),n=t}})}():async function(){i.logInfo("mka",s`{yellow server-core}`);const e=[];a.transpileOnce(c,{...m,writeFileHook:(n,t)=>{e.push({name:n,content:t})}})||(i.logError("mka",s`{yellow server-core} failed at transpile typescript`),process.exit(1));const n=await l.pack({...d,files:e});n.success||(i.logError("mka",s`{yellow server-core} failed at pack`),process.exit(1)),await o.writeFile("build/server.js",n.jsContent),await o.writeFile("build/server.js.map",n.mapContent),i.logInfo("mka","server-core completed successfully")}()}},"build-home-page":(e,n)=>{const t=require("fs"),o=n("run-typescript"),s=require("node-sass"),i=n("admin-base"),r="src/home-page/index.ts",a={types:["node"],outDir:"build/home-page",lib:["lib.dom.d.ts"],writeFileHook:(e,n,t,o,s,i)=>{if("build/home-page/index.js"!=e)return i(e,n,t,o,s);c(n)},watchWriteFileHook:(e,n,t,o)=>{if("build/home-page/index.js"!=e)return o(e,n,t);c(n),console.log("[mak] reload index.js"),i.admin({type:"content-update",parameter:{app:"www",name:"index.js"}}).catch((()=>{}))}},l={file:"src/home-page/index.sass",outputStyle:"compressed"};function c(e){const n=e.indexOf("\n"),o=e.indexOf("\n",n+1);t.writeFileSync("dist/home/client.js",e.slice(o+1))}async function m(){return console.log(`[css] transpiling ${l.file}`),new Promise(((e,n)=>{s.render(l,((o,s)=>{if(o)return console.log(`[css] error at ${l.file}:${o.line}:${o.column}: ${o.message}`),void n();t.writeFileSync("dist/home/index.css",s.css),console.log(`[css] transpiled completed successfully in ${s.stats.duration}ms`),e()}))}))}e.build=async function(e){e?function(){console.log("[mak] building watching home-page"),o.transpileWatch(r,a);let e=0;t.watchFile("src/home-page/index.html",{persistent:!1},((n,o)=>{n.mtime!=o.mtime&&(e+=1,console.log(`[cpy] copy and reload index.html #${e}`),t.copyFileSync("src/home-page/index.html","dist/home/index.html"),i.admin({type:"content-update",parameter:{app:"www",name:"index.html"}}).catch((()=>{})))})),console.log("[mak] index.html fs watcher setup");let n=0;t.watchFile("src/home-page/index.sass",{persistent:!1},((e,t)=>{e.mtime!=t.mtime&&m().then((()=>{n+=1,console.log(`[mak] reload index.css #${n}`),i.admin({type:"content-update",parameter:{app:"www",name:"index.css"}}).catch((()=>{}))})).catch((()=>{}))})),console.log("[mak] index.sass fs watcher setup"),process.on("SIGINT",(()=>{t.unwatchFile("build/home-page/index.js"),t.unwatchFile("src/home-page/index.html"),t.unwatchFile("src/home-page/index.sass"),process.exit(0)}))}():async function(){if(console.log("[mak] building home-page"),o.transpileOnce(r,a)){await i.admin({type:"content-update",parameter:{app:"www",name:"index.js"}});try{await m(),await i.admin({type:"content-update",parameter:{app:"www",name:"index.css"}})}catch{return void console.log("[mak] build home-page failed at transpiling stylesheet")}console.log("[cpy] copy index.html"),t.copyFileSync("src/home-page/index.html","dist/home/index.html"),await i.admin({type:"content-update",parameter:{app:"www",name:"index.html"}}),console.log("[mak] build home-page completed succesfully")}else console.log("[mak] build home-page failed at transpiling script")}()}},".":(e,n)=>{const t=n("admin-base"),o=n("build-self"),s=n("build-server-core"),i=n("build-home-page");function r(e){if(["ak","collect","cost"].includes(e))return e;console.log("unknown app name"),process.exit(1)}const a=process.argv.slice(2);"self"==a[0]?o.build():"server-core"==a[0]?s.build(!1):"watch"==a[0]&&"server-core"==a[1]?s.build(!0):"home-page"==a[0]?i.build(!1):"watch"==a[0]&&"home-page"==a[1]?i.build(!0):a[0].endsWith("-client")||a[0].endsWith("-server")?r(a[0].slice(0,-7)):"watch"==a[0]&&a[1].endsWith("-client")||"watch"==a[0]&&a[1].endsWith("-server")?r(a[1].slice(0,-7)):"watch"==a[0]&&a[1]?(r(a[1]),r(a[1])):"update-content"==a[0]&&3==a.length?t.admin({type:"content-update",parameter:{app:a[1],name:a[2]}}).then((()=>process.exit(1))):"expire-device"==a[0]&&2==a.length||("shutdown"==a[0]?t.admin({type:"shutdown"}).then((()=>process.exit(1))):(console.log("unknown command"),process.exit(1)))}});